<apiPackage id="com.supermap.web.iServerJava6R.themeServices"><apiName>com.supermap.web.iServerJava6R.themeServices</apiName><apiDetail/><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph"><apiName>ThemeGraph</apiName><shortdesc>
	 统计专题图.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.supermap.web.iServerJava6R.themeServices:Theme</apiBaseClassifier></apiClassifierDef><apiDesc>
	 统计专题图.
	 <p>统计专题图可同时表示多个字段属性信息，在区域本身与各区域之间形成横向和纵向的对比。它允许一次分析多个数值型变量，即可以将多个变量的值绘制在一个统计图上。目前提供的统计图类型有：面积图，阶梯图，折线图，点状图，柱状图，三维柱状图，饼图，三维饼图，玫瑰图，三维玫瑰图，堆叠柱状图以及三维堆叠柱状图。多用于具有相关数量特征的地图上，比如表示不同地区多年的粮食产量、GDP、人口等，不同时段客运量、地铁流量等。<br/>统计专题图必须设置用于制作专题图的子项，因此 Items 属性为必设值。<br/>下图为一幅渤海地区2000年城乡人口比例的统计专题图：<br/><img src="../../../../../images/themeGraph_iServer6.bmp"/></p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:ThemeGraph"><apiName>ThemeGraph</apiName><shortdesc>
		 初始化 ThemeGraph 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeGraph 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:barWidth:get"><apiName>barWidth</apiName><shortdesc>
		 柱状专题图中每一个柱的宽度。使用地图坐标单位，默认值为0.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 柱状专题图中每一个柱的宽度。使用地图坐标单位，默认值为0.
		 <p>只有选择的统计图类型为柱状图（柱状图、三维柱状图、堆叠柱状图、三维堆叠柱状图）时，此项才可设置。 </p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:flow:get"><apiName>flow</apiName><shortdesc>
		 ThemeFlow 对象。通过该字段可以设置统计符号是否流动显示和牵引线风格。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeFlow</apiValueClassifier></apiValueDef><apiDesc>
		 ThemeFlow 对象。通过该字段可以设置统计符号是否流动显示和牵引线风格。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:graduatedMode:get"><apiName>graduatedMode</apiName><shortdesc>
		 统计图中地理要素的值与图表尺寸间的映射关系（常数、对数、平方根），即分级方式。默认值为 GraduatedMode.Constant
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>GraduatedMode.Constant 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 统计图中地理要素的值与图表尺寸间的映射关系（常数、对数、平方根），即分级方式。默认值为 GraduatedMode.Constant
		 </apiDesc></apiValueDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#GraduatedMode"><linktext>GraduatedMode</linktext></link></related-links></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:graphAxes:get"><apiName>graphAxes</apiName><shortdesc>
		 ThemeGraphAxes 对象。用于设置统计图中坐标轴样式相关信息，如坐标轴颜色、是否显示、坐标文本样式等。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeGraphAxes</apiValueClassifier></apiValueDef><apiDesc>
		 ThemeGraphAxes 对象。用于设置统计图中坐标轴样式相关信息，如坐标轴颜色、是否显示、坐标文本样式等。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:graphSizeFixed:get"><apiName>graphSizeFixed</apiName><shortdesc>
		 缩放地图时统计图符号是否固定大小。默认值为 false，即统计图符号将随地图缩放。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
		 </apiDefaultValue></apiValueDef><apiDesc>
		 缩放地图时统计图符号是否固定大小。默认值为 false，即统计图符号将随地图缩放。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:graphSize:get"><apiName>graphSize</apiName><shortdesc>
		 ThemeGraphSize 对象。用于设置统计符号的最大最小尺寸。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeGraphSize</apiValueClassifier></apiValueDef><apiDesc>
		 ThemeGraphSize 对象。用于设置统计符号的最大最小尺寸。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:graphText:get"><apiName>graphText</apiName><shortdesc>
		 ThemeGraphText 对象。用于设置统计图上的文字是否可见、文本类型、文本显示风格。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeGraphText</apiValueClassifier></apiValueDef><apiDesc>
		 ThemeGraphText 对象。用于设置统计图上的文字是否可见、文本类型、文本显示风格。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:graphType:get"><apiName>graphType</apiName><shortdesc>
		 统计专题图渲染类型.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ThemeGraphType.AREA
		 </apiDefaultValue></apiValueDef><apiDesc>
		 统计专题图渲染类型.
		 <p>SuperMap 提供了多种类型的统计图，分别为面积图、阶梯图、折线图、点状图、柱状图、三维柱状图、饼图、三维饼图、玫瑰图、三维玫瑰图、堆叠柱状图、三维堆叠柱状图、环状图。默认为面积图。</p> 
		 </apiDesc></apiValueDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#ThemeGraphType"><linktext>ThemeGraphType</linktext></link></related-links></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:items:get"><apiName>items</apiName><shortdesc>
		 统计专题图子项（ThemeGraphItem）集合。必设字段.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 统计专题图子项（ThemeGraphItem）集合。必设字段.
		 <p>统计专题图可以基于多个变量，反映多种属性，即可以将多个专题变量的值绘制在一个统计图上。每一个专题变量对应的统计图即为一个专题图子项（ThemeGraphItem）。对于每个专题图子项可以为其设置标题、风格，甚至可以将该子项再制作成范围分段专题图。</p> 
		 </apiDesc></apiValueDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#ThemeGraphItem"><linktext>ThemeGraphItem</linktext></link></related-links></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:memoryKeys:get"><apiName>memoryKeys</apiName><shortdesc>
		 指定需要制作统计图的对象 ID 数组.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 指定需要制作统计图的对象 ID 数组.
		 <p>该属性默认为空，表示对指定数据集中的所有对象制作统计图表。若该属性不为空，则只针对数组中所指定的对象制作统计图表。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:negativeDisplayed:get"><apiName>negativeDisplayed</apiName><shortdesc>
		 专题图中是否显示属性为负值的数据。默认为 ture 表示显示。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 专题图中是否显示属性为负值的数据。默认为 ture 表示显示。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:offset:get"><apiName>offset</apiName><shortdesc>
		 ThemeOffset 对象。用于设置统计图的偏移量。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeOffset</apiValueClassifier></apiValueDef><apiDesc>
		 ThemeOffset 对象。用于设置统计图的偏移量。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:overlapAvoided:get"><apiName>overlapAvoided</apiName><shortdesc>
		 统计图是否采用避让方式显示.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 统计图是否采用避让方式显示.
		 <p>1. 对数据集制作统计专题图:当统计图采用避让方式显示时，如果 overlapDisplayed 为 true，则在统计图重叠度很大的情况下，会出现无法完全避免统计图重叠的现象；如果 overlapDisplayed 为 false，会过滤掉一些统计图，从而保证所有的统计图均不重叠。<br/>2. 对数据集同时制作统计专题图和标签专题图:当统计图不显示子项文本时，标签专题图的标签即使和统计图重叠，两者也都可正常显示；当统计图显示子项文本时，如果统计图中的子项文本和标签专题图中的标签不重叠，则两者均正常显示；如果重叠，则会过滤掉统计图的子项文本，只显示标签。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:roseAngle:get"><apiName>roseAngle</apiName><shortdesc>
		 统计图中玫瑰图或三维玫瑰图用于等分的角度，默认为0度，精确到0.1度.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 统计图中玫瑰图或三维玫瑰图用于等分的角度，默认为0度，精确到0.1度.
		 <p>在角度为0或者大于360度的情况下均使用360度来等分制作统计图的字段数。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraph:startAngle:get"><apiName>startAngle</apiName><shortdesc>
		 饼状统计图扇形的起始角。默认为0度，精确到0.1度.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 饼状统计图扇形的起始角。默认为0度，精确到0.1度.
		 <p>以水平方向为正向。只有选择的统计图类型为饼状图（饼图、三维饼图、玫瑰图、三维玫瑰图）时，此项才可设置。</p> 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:GraduatedMode"><apiName>GraduatedMode</apiName><shortdesc>
	 专题图分级模式.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 专题图分级模式.
	 <p>分级主要是为了减少制作统计专题图中数据大小之间的差异。有三种分级模式：常数、对数和平方根。不同的分级模式用于确定符号大小的数值是不相同的，常数按照字段的原始数据进行，对数则是对每条记录对应的专题变量取自然对数、平方根则是对其取平方根，用最终得到的结果来确定其等级符号的大小。<br/>对于有值为负数的字段，不可以采用对数和平方根的分级方式。对于所有值均大于 0 的字段，如果数据之间差距较大，则可以采用对数或者平方根的分级方式来进行，这样就减少了数据之间的绝对大小的差异，使得等级符号图的视觉效果比较好，同时不同类别之间的比较也还是有意义的；若需突出小于 1 的值和大于 1 的值之间的区别，则可选用对数模式。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="com.supermap.web.iServerJava6R.themeServices:GraduatedMode:CONSTANT"><apiName>CONSTANT</apiName><shortdesc>
		 常量分级模式.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>CONSTANT</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 常量分级模式.
		 <p>按属性表中原始数值的线性比例进行分级运算。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:GraduatedMode:LOGARITHM"><apiName>LOGARITHM</apiName><shortdesc>
		 对数分级模式.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>LOGARITHM</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 对数分级模式.
		 <p>按属性表中原始数值自然对数的线性比例进行分级运算。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:GraduatedMode:SQUAREROOT"><apiName>SQUAREROOT</apiName><shortdesc>
		 平方根分级模式.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>SQUAREROOT</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 平方根分级模式.
		 <p>按属性表中原始数值平方根的线性比例进行分级运算。</p> 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:LabelMatrixCell"><apiName>LabelMatrixCell</apiName><shortdesc>
	 矩阵标签元素抽象类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 矩阵标签元素抽象类.
	 <p>矩阵标签专题图是标签专题图（ThemeLabel）的一种，其中矩阵标签中的填充元素又可分为图片类型（LabelImageCell）、符号类型（LabelSymbolCell）、专题图类型（LabelThemeCell）三种，该类是这三种类型的矩阵标签元素的基类。</p>
	 </apiDesc></apiClassifierDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#ThemeLabel"><linktext>ThemeLabel</linktext></link><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelSymbolCell"><linktext>LabelSymbolCell</linktext></link><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelThemeCell"><linktext>LabelThemeCell</linktext></link><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelImageCell"><linktext>LabelImageCell</linktext></link></related-links><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:LabelMatrixCell:LabelMatrixCell"><apiName>LabelMatrixCell</apiName><shortdesc>
		 初始化 LabelMatrixCell 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 LabelMatrixCell 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelMatrixCell:type:get"><apiName>type</apiName><shortdesc>
		 获取或设置矩阵标签元素类型。由 LabelMatrixCellType 类定义，包括图片、符号、专题图三种。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 获取或设置矩阵标签元素类型。由 LabelMatrixCellType 类定义，包括图片、符号、专题图三种。 
		 </apiDesc></apiValueDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelMatrixCellType"><linktext>LabelMatrixCellType</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel"><apiName>ThemeLabel</apiName><shortdesc>
	 标签专题图.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.supermap.web.iServerJava6R.themeServices:Theme</apiBaseClassifier></apiClassifierDef><apiDesc>
	 标签专题图.
	 <p>标签专题图是用文本的形式在图层中显示点、线、面等对象的属性信息，一般将文本型或数值型字段标注于图层中，如地名、道路名称、河流等级、宽度等信息。这里需要注意的是地图上一般还会出现图例说明，图名，比例尺等等，这些都是制图元素，不属于标签专题图标注的范畴。标签专题图有两种表现形式:<br/>第一种 统一标签专题图，即将指定图层的表达式的所有值使用统一的风格输出，labelExpression 用于设定标签专题图所使用的字段。<br/>第二种 为分段标签专题图。它仍然使用 labelExpression 设定标签专题图显示的字段值，通过 rangeExpression 指定数字型的字段作为分段依据（即使用 rangeExpression 属性分段，使用 labelExpression 属性显示）。items 中的每个子对象的 [start，end] 分段值必须来源于属性 rangeExpression 的字段值，并在 items 中为每个或部分分段子项自定义特殊的风格。<br/>下图为一幅标签专题图的示意图：<br/><img src="../../../../../images/ThemeLabel_iServer6.bmp"/></p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:ThemeLabel"><apiName>ThemeLabel</apiName><shortdesc>
		 初始化 ThemeLabel 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeLabel 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:alongLine:get"><apiName>alongLine</apiName><shortdesc>
		 ThemeLabelAlongLine 对象，用于定义标签沿线标注的样式.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeLabelAlongLine</apiValueClassifier></apiValueDef><apiDesc>
		 ThemeLabelAlongLine 对象，用于定义标签沿线标注的样式.
		 <p>沿线标注属性只适用于线数据集专题图。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:background:get"><apiName>background</apiName><shortdesc>
		 ThemeLabelBackground 对象，标签专题图中标签的背景显示样式。通过该字段可以设置标签的背景形状和颜色等。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeLabelBackground</apiValueClassifier></apiValueDef><apiDesc>
		 ThemeLabelBackground 对象，标签专题图中标签的背景显示样式。通过该字段可以设置标签的背景形状和颜色等。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:flow:get"><apiName>flow</apiName><shortdesc>
		 ThemeFlow 对象，用于定义标签专题图中标签是否流动显示及牵引线显示样式 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeFlow</apiValueClassifier></apiValueDef><apiDesc>
		 ThemeFlow 对象，用于定义标签专题图中标签是否流动显示及牵引线显示样式 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:items:get"><apiName>items</apiName><shortdesc>
		 设置分段标签专题图子项（ThemeLabelItem）数组 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 设置分段标签专题图子项（ThemeLabelItem）数组 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:labelEexpression:get"><apiName>labelEexpression</apiName><shortdesc>
		 标注字段表达式。系统将 labelExpression 对应的字段或字段表达式的值以标签的形式显示在图层中。必设字段。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 标注字段表达式。系统将 labelExpression 对应的字段或字段表达式的值以标签的形式显示在图层中。必设字段。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:labelOverLengthMode:get"><apiName>labelOverLengthMode</apiName><shortdesc>
		 LabelOverLengthMode 枚举类常量，专题图中超长标签的处理模式，默认为 LabelOverLengthMode.NONE.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 LabelOverLengthMode 枚举类常量，专题图中超长标签的处理模式，默认为 LabelOverLengthMode.NONE.
		 <p>对于长度超过 maxLabelLength 属性值的标签称为超长标签。</p> 
		 </apiDesc></apiValueDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#ThemeLabel/maxLabelLength"><linktext>maxLabelLength</linktext></link></related-links></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:matrixCells:get"><apiName>matrixCells</apiName><shortdesc>
		 矩阵标签元素数组.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 矩阵标签元素数组.
		 <p>该属性是一个二维数组，数组中的每个对象即为一个矩阵标签元素。矩阵标签元素分为三种类型：图片、符号、专题图，可任意组合。如：Themelabel.matrixCells = [new Array(ThemeLabelCell, LabelSymbolCell),new Array(LabelSymbolCell, LabelImageCell)]。</p> 
		 </apiDesc></apiValueDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelSymbolCell"><linktext>LabelSymbolCell</linktext></link><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelThemeCell"><linktext>LabelThemeCell</linktext></link><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelImageCell"><linktext>LabelImageCell</linktext></link></related-links></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:maxLabelLength:get"><apiName>maxLabelLength</apiName><shortdesc>
		 标签在每一行显示的最大长度，单位为字符，默认为 256.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>256
		 </apiDefaultValue></apiValueDef><apiDesc>
		 标签在每一行显示的最大长度，单位为字符，默认为 256.
		 <p>一个中文为两个字符。如果超过最大长度，可以采用两种方式来处理，一种是换行的模式进行显示，另一种是以省略号方式显示。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:numericPrecision:get"><apiName>numericPrecision</apiName><shortdesc>
		 如果显示的标签内容为数字，通过该字段设置其显示的精度.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
		 如果显示的标签内容为数字，通过该字段设置其显示的精度.
		 <p>例如标签对应的数字是8071.64529347，如果该属性为0时，显示8071；为1时，显示8071.6；为3时，则是8071.645。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:offset:get"><apiName>offset</apiName><shortdesc>
		 ThemeOffset 对象，用于定义专题图中标签的偏移量。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeOffset</apiValueClassifier></apiValueDef><apiDesc>
		 ThemeOffset 对象，用于定义专题图中标签的偏移量。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:overlapAvoided:get"><apiName>overlapAvoided</apiName><shortdesc>
		 是否允许以文本避让方式显示文本。默认值为 false， 即不进行自动避让.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 是否允许以文本避让方式显示文本。默认值为 false， 即不进行自动避让.
		 <p>当标签有重叠时，使用该方法可以在一定程度上避免这种现象。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:rangeExpression:get"><apiName>rangeExpression</apiName><shortdesc>
		 制作分段标签专题的分段字段或字段表达式.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 制作分段标签专题的分段字段或字段表达式.
		 <p>该表达式对应的字段（或者字段表达式）的值应该为数值型。该字段与 items 分段子项联合使用，每个子项的起始值 [start，end)来源于 rangeExpression 字段值。最后 labelExpression 指定的标签字段（标签专题图要显示的具体内容）会根据分段子项的风格进行分段显示。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:smallGeometryLabeled:get"><apiName>smallGeometryLabeled</apiName><shortdesc>
		 是否显示长度大于被标注对象本身长度的标签，默认为 false，即不显示.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 是否显示长度大于被标注对象本身长度的标签，默认为 false，即不显示.
		 <p>在标签的长度大于线或者面对象本身的长度时，如果该值为 true，则标签文字会叠加在一起显示，为了清楚完整的显示该标签，可以采用换行模式（LabelOverLengthMode.NEWLINE）来显示标签，但必须保证每行的长度小于对象本身的长度。</p> 
		 </apiDesc></apiValueDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelOverLengthMode"><linktext>LabelOverLengthMode</linktext></link></related-links></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabel:text:get"><apiName>text</apiName><shortdesc>
		 ThemeLabelText 对象，标签中的文本风格。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeLabelText</apiValueClassifier></apiValueDef><apiDesc>
		 ThemeLabelText 对象，标签中的文本风格。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelBackground"><apiName>ThemeLabelBackground</apiName><shortdesc>
	 标签背景风格类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 标签背景风格类.
	 <p>通过该类可以设置标签的背景形状和风格。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelBackground:ThemeLabelBackground"><apiName>ThemeLabelBackground</apiName><shortdesc>
		 初始化 ThemeLabelBackGround 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeLabelBackGround 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelBackground:backStyle:get"><apiName>backStyle</apiName><shortdesc>
		 ServerStyle 对象，用于获取或设置标签专题图中标签背景风格.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerStyle</apiValueClassifier></apiValueDef><apiDesc>
		 ServerStyle 对象，用于获取或设置标签专题图中标签背景风格.
		 <p>当背景形状 labelBackShape 属性设为 NONE（即无背景形状） 时，backStyle 属性无效。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelBackground:labelBackShape:get"><apiName>labelBackShape</apiName><shortdesc>
		 标签专题图中标签背景的形状，默认为 LabelBackShape.NONE 即不使用任何的形状作为标签的背景.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 标签专题图中标签背景的形状，默认为 LabelBackShape.NONE 即不使用任何的形状作为标签的背景.
		 <p>背景类型可以是矩形、圆角矩形、菱形、椭圆形、三角形和符号等。</p> 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphItem"><apiName>ThemeGraphItem</apiName><shortdesc>
	 统计专题图子项类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 统计专题图子项类.
	 <p>该类用来设置统计专题图子项的标题，专题变量，显示风格和分段风格。<br/>统计专题图通过为每个要素或记录绘制统计图来反映其对应的专题值的大小。统计专题图可以基于多个变量，反映多种属性，即可以将多个专题变量的值绘制在一个统计图上。每一个专题变量对应的统计图即为一个专题图子项。<br/>设置统计专题图子项时，GraphExpression 和 UniformStyle 为必设属性。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphItem:ThemeGraphItem"><apiName>ThemeGraphItem</apiName><shortdesc>
		 初始化 ThemeGraphItem 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeGraphItem 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphItem:caption:get"><apiName>caption</apiName><shortdesc>
		 获取或设置专题图子项的标题。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 获取或设置专题图子项的标题。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphItem:graphExpression:get"><apiName>graphExpression</apiName><shortdesc>
		 获取或设置统计专题图的专题变量.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 获取或设置统计专题图的专题变量.
		 <p>专题变量可以是一个字段或字段表达式。字段必须为数值型；表达式只能为数值型的字段间的运算。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphItem:memoryDoubleValues:get"><apiName>memoryDoubleValues</apiName><shortdesc>
		 若 ThemeGraph.memoryKeys 属性不为空，则 memoryDoubleValues 数组中所存储的值与 ThemeGraph.memoryKeys 是一一对应的。代表指定对象在 graphExpression 属性所指定字段下的字段值。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 若 ThemeGraph.memoryKeys 属性不为空，则 memoryDoubleValues 数组中所存储的值与 ThemeGraph.memoryKeys 是一一对应的。代表指定对象在 graphExpression 属性所指定字段下的字段值。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphItem:uniformStyle:get"><apiName>uniformStyle</apiName><shortdesc>
		 获取或设置统计专题图子项的显示风格。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerStyle</apiValueClassifier></apiValueDef><apiDesc>
		 获取或设置统计专题图子项的显示风格。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:LabelSymbolCell"><apiName>LabelSymbolCell</apiName><shortdesc>
	 符号类型的矩阵标签元素类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.supermap.web.iServerJava6R.themeServices:LabelMatrixCell</apiBaseClassifier></apiClassifierDef><apiDesc>
	 符号类型的矩阵标签元素类.
	 <p>矩阵标签专题图是标签专题图（ThemeLabel）的一种，其中矩阵标签中的填充元素又可分为图片类型（LabelImageCell）、符号类型（LabelSymbolCell）、专题图类型（LabelThemeCell）三种，该类是这三种类型的矩阵标签元素其中的一种，用于定义符号类型的矩阵标签，如符号 ID 字段名称（符号 ID 与 SuperMap 桌面产品中点、线、面符号的 ID 对应） 、大小等。<br/>用户在实现矩阵标签专题图时只需将定义好的矩阵标签元素赋值予 ThemeLabel.matrixCells 属性即可。matrixCells 属是一个二维数组，每一维可以是任意类型的矩阵标签元素组成的数组（也可是单个标签元素组成的数组，即数组中只有一个元素）。如下图为生成的矩阵标签专题图中的一个标签，由符号类型的矩阵标签元素（LabelSymbolCell，左）、专题图类型的矩阵标签元素（LabelThemeCell，右）组成，此时的 matrixCells 属性为一个 1*2 维的数组（即一行两列）。<br/><img src="../../../../../images/MatrixLabel.png"/></p> 
	 </apiDesc></apiClassifierDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#ThemeLabel"><linktext>ThemeLabel</linktext></link><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelImageCell"><linktext>LabelImageCell</linktext></link><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelThemeCell"><linktext>LabelThemeCell</linktext></link></related-links><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:LabelSymbolCell:LabelSymbolCell"><apiName>LabelSymbolCell</apiName><shortdesc>
		 初始化 LabelSymbolCell 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 LabelSymbolCell 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelSymbolCell:style:get"><apiName>style</apiName><shortdesc>
		 符号样式—— ServerStyle 对象，包括符号大小（ServerStyle.markerSize）和符号旋转（ServerStyle.markerAngle）角度，其中用于设置符号 ID 的属性（ServerStyle.markerSymbolID）在此处不起作用。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerStyle</apiValueClassifier></apiValueDef><apiDesc>
		 符号样式—— ServerStyle 对象，包括符号大小（ServerStyle.markerSize）和符号旋转（ServerStyle.markerAngle）角度，其中用于设置符号 ID 的属性（ServerStyle.markerSymbolID）在此处不起作用。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelSymbolCell:symbolIDField:get"><apiName>symbolIDField</apiName><shortdesc>
		 符号 ID 或符号 ID 所对应的字段名称，必设属性。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 符号 ID 或符号 ID 所对应的字段名称，必设属性。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:RemoveThemeResult"><apiName>RemoveThemeResult</apiName><shortdesc>
	 服务端返回的移除专题图结果数据 .</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 服务端返回的移除专题图结果数据 .
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:RemoveThemeResult:RemoveThemeResult"><apiName>RemoveThemeResult</apiName><shortdesc>
		 初始化 RemoveThemeResult 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 RemoveThemeResult 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:RemoveThemeResult:succeed:set"><apiName>succeed</apiName><shortdesc>
		 删除专题图是否成功，true 表示成功删除。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 删除专题图是否成功，true 表示成功删除。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeUniqueItem"><apiName>ThemeUniqueItem</apiName><shortdesc>
	 单值专题图子项.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 单值专题图子项.
	 <p>单值专题图是将专题值相同的要素归为一类，为每一类设定一种渲染风格，其中每一类就是一个专题图子项。比如，利用单值专题图制作行政区划图，Name 字段代表省/直辖市名，该字段用来做专题变量，如果该字段的字段值总共有5种不同值，则该行政区划图有5个专题图子项。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeUniqueItem:ThemeUniqueItem"><apiName>ThemeUniqueItem</apiName><shortdesc>
		 初始化 ThemeUniqueItem 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeUniqueItem 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeUniqueItem:caption:get"><apiName>caption</apiName><shortdesc>
		 专题图子项的标题。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 专题图子项的标题。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeUniqueItem:style:get"><apiName>style</apiName><shortdesc>
		 单值专题图子项的显示风格，ServerStyle 对象。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerStyle</apiValueClassifier></apiValueDef><apiDesc>
		 单值专题图子项的显示风格，ServerStyle 对象。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeUniqueItem:unique:get"><apiName>unique</apiName><shortdesc>
		 单值专题图子项的单值。必设字段。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 单值专题图子项的单值。必设字段。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeUniqueItem:visible:get"><apiName>visible</apiName><shortdesc>
		 单值专题图子项的可见性。默认为 true，表示可见。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 单值专题图子项的可见性。默认为 true，表示可见。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeOffset"><apiName>ThemeOffset</apiName><shortdesc>
	 专题图中的渲染符号的偏移量设置类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 专题图中的渲染符号的偏移量设置类.
	 <p>通过该类可以设置专题图中渲染符号的偏移量以及偏移量是否随地图缩放而改变。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeOffset:ThemeOffset"><apiName>ThemeOffset</apiName><shortdesc>
		 初始化 ThemeOffset 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeOffset 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeOffset:offsetFixed:get"><apiName>offsetFixed</apiName><shortdesc>
		 当前专题图是否固定渲染符号的偏移量.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 当前专题图是否固定渲染符号的偏移量.
		 <p>所谓固定偏移量，则渲染符号的偏移量不随地图的缩放而变化。默认为 false，表示偏移量随地图的缩放而变化。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeOffset:offsetX:get"><apiName>offsetX</apiName><shortdesc>
		 专题图中渲染符号的水平偏移量，当 ThemeOffset.offsetFixed = ture 时，该属性单位为像素，反之为地图单位.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 专题图中渲染符号的水平偏移量，当 ThemeOffset.offsetFixed = ture 时，该属性单位为像素，反之为地图单位.
		 <p>该偏移量的值为一个常量值或者字段表达式所表示的值，即如果字段表达式为 SmID，其中 SmID = 2，那么水平偏移量为 2。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeOffset:offsetY:get"><apiName>offsetY</apiName><shortdesc>
		  专题图中渲染符号垂直偏移量。当 ThemeOffset.offsetFixed = ture 时，该属性单位为像素，反之为地图单位.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		  专题图中渲染符号垂直偏移量。当 ThemeOffset.offsetFixed = ture 时，该属性单位为像素，反之为地图单位.
		  <p>该偏移量的值为一个常量值或者字段表达式所表示的值，即如果字段表达式为 SmID，其中 SmID = 2，那么垂直偏移量为2。</p> 
		  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelItem"><apiName>ThemeLabelItem</apiName><shortdesc>
	 分段标签专题图的子项.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 分段标签专题图的子项.
	 <p>标签专题图用专题值对点、线、面等对象做标注，值得注意的是，分段标签专题图允许用户通过 ThemeLabel.rangeExpression 属性指定用于分段的数值型字段，同一范围段内的对象使用具有相同显示风格进行标记，其中每一个范围段就是一个专题图子项，每一个子项都具有其名称、风格、起始值和终止值。注意：每个分段所表示的范围为 [Start, End)。例如：标签专题图的分段点有两个子项，他们所代表的分段区间分别为[0,5)，[5,10)。那么需要分别设置 ThemeLabelItem[0].start=0，ThemeLabelItem[0].end=5，ThemeLabelItem[1].start=5，ThemeLabelItem[1].end=10。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelItem:ThemeLabelItem"><apiName>ThemeLabelItem</apiName><shortdesc>
		 初始化 ThemeLabelItem 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeLabelItem 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelItem:caption:get"><apiName>caption</apiName><shortdesc>
		 标签专题子项的标题。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 标签专题子项的标题。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelItem:end:get"><apiName>end</apiName><shortdesc>
		 标签专题图子项的终止值.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 标签专题图子项的终止值.
		 <p>如果该子项是分段中最后一个子项，那么该终止值就是分段的最大值；如果不是最后一项，该终止值必须与其下一子项的起始值相同，否则系统抛出异常。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelItem:start:get"><apiName>start</apiName><shortdesc>
		 标签专题图子项的分段起始值.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 标签专题图子项的分段起始值.
		 <p>如果该子项是分段中第一项，那么该起始值就是分段的最小值；如果该子项的序号大于等于 1 的时候，该起始值必须与前一子项的终止值相同，否则系统会抛出异常。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelItem:style:get"><apiName>style</apiName><shortdesc>
		 标签专题图子项文本的显示风格.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerTextStyle</apiValueClassifier></apiValueDef><apiDesc>
		 标签专题图子项文本的显示风格.
		 <p>各种风格的优先级从高到低为：ThemeLabel.ThemeLabelText.uniformMixedStyle（标签文本的组合风格），ThemeLabelItem.style（分段子项的文本风格），ThemeLabel.ThemeLabelText.uniformStyle（统一文本风格）。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelItem:visible:get"><apiName>visible</apiName><shortdesc>
		 标签专题图子项是否可见。默认值为 true，表示可见。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 标签专题图子项是否可见。默认值为 true，表示可见。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeService"><apiName>ThemeService</apiName><shortdesc>
	 专题图服务类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.supermap.web.service:ServiceBase</apiBaseClassifier></apiClassifierDef><apiDesc>
	 专题图服务类.
	 <p>该类负责将客户端制作专题图的参数传递给服务端，在服务端会生成一个临时图层来制作相应的专题图，这个专题图在服务端就是一个资源（ResouceInfo），它具有资源地址 url 和资源 ID 号。客户端获取到这个资源 ID 号以后将其赋值给 TiledDynamicRESTLayer 或 DynamicRESTLayer 的 layersID 属性就能够显示出相应的专题图。<br/>用户获取服务端返回的专题图数据有两种方式：一种是通过监听 ThemeEvent.PROCESS_COMPLETE 事件；一种是使用 AsyncResponder 类。</p> 
	 
	 </apiDesc></apiClassifierDetail><adobeApiEvent id="com.supermap.web.iServerJava6R.themeServices:ThemeService_mx.rpc.events.FaultEvent_fault"><apiName>fault</apiName><shortdesc>
	 当与服务端交互失败时触发该事件。 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>mx.rpc.events.FaultEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 当与服务端交互失败时触发该事件。 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.supermap.web.iServerJava6R.themeServices:ThemeService_com.supermap.web.iServerJava6R.serviceEvents.ThemeEvent_processComplete"><apiName>processComplete</apiName><shortdesc>
	 当与服务端交互成功完成时触发该事件。 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.supermap.web.iServerJava6R.serviceEvents.ThemeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 当与服务端交互成功完成时触发该事件。 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeService:ThemeService"><apiName>ThemeService</apiName><shortdesc>
		 使用专题图服务资源地址初始化 ThemeService 的新实例。 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiDesc>专题图服务资源地址。
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 使用专题图服务资源地址初始化 ThemeService 的新实例。 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.supermap.web.iServerJava6R.themeServices:ThemeService:processAsync"><apiName>processAsync</apiName><shortdesc>
		 根据服务地址与服务端完成异步通信，即将客户端定义的专题图参数 ThemeParameters 传递至服务端，并获取服务端返回的专题图数据。.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>该返回类型为异步 RPC 操作提供设置额外数据或标记级别数据的位置。
		 
		 </apiDesc><apiType value="mx.rpc:AsyncToken"/></apiReturn><apiParam><apiItemName>parameters</apiItemName><apiOperationClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeParameters</apiOperationClassifier><apiDesc>制作专题图时需要服务端传递的参数。
		 </apiDesc></apiParam><apiParam><apiItemName>responder</apiItemName><apiType value="mx.rpc:IResponder"/><apiData>null</apiData><apiDesc>由 AsyncResponder 类实现。远程或异步请求服务完成时将调用的处理函数。使用方法为<br/>AsyncResponder(result:Function, fault:Function, token:Object = null)<br/>result:Function — 成功完成请求时应调用的函数。必须具有以下签名：<br/> 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 根据服务地址与服务端完成异步通信，即将客户端定义的专题图参数 ThemeParameters 传递至服务端，并获取服务端返回的专题图数据。.
		 <p>当专题图获取成功时，触发 ThemeEvent.PROCESS_COMPLETE 事件。因此用户可以通过两种方式获取专题图制作成功后服务端返回的结果数据：<br/>1. 通过 AsyncResponder 类获取（推荐使用）；<br/>2. 通过监听 ThemeEvent.PROCESS_COMPLETE 事件获取。</p> 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeService:lastResult:get"><apiName>lastResult</apiName><shortdesc>
		 获取服务端返回的专题图数据。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeResult</apiValueClassifier></apiValueDef><apiDesc>
		 获取服务端返回的专题图数据。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:RemoveThemeService"><apiName>RemoveThemeService</apiName><shortdesc>
	 移除专题图服务类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.supermap.web.service:ServiceBase</apiBaseClassifier></apiClassifierDef><apiDesc>
	 移除专题图服务类.
	 <p>该类负责将专题图资源 ID 号传递给服务端以此删除指定专题图资源。并获取服务端返回的结果信息。<br/>在客户端显示在服务端生成专题图就是将实例化的动态图层（如 TiledDynamicRESTLayer）的 layersID 属性设置为生成的专题图资源在服务端的 ID 号；如果使用底图制作专题图，则在删除成功后需要将实例化的动态图层（TiledDynamicRESTLayer 或 DynamicRESTLayer）的属性 layersID 置空，然后再刷新地图就可以正常显示原图。建议制作专题图时新实例化一个图层专门用于显示专题图，将该图层设置为半透明，与底图叠加显示效果更好。<br/>用户获取服务端返回的删除专题图结果数据有两种方式：一种是通过监听 RemoveThemeEvent.PROCESS_COMPLETE 事件；一种是使用 AsyncResponder 类</p> 
	 
	 </apiDesc></apiClassifierDetail><adobeApiEvent id="com.supermap.web.iServerJava6R.themeServices:RemoveThemeService_mx.rpc.events.FaultEvent_fault"><apiName>fault</apiName><shortdesc>
	 当与服务端交互失败时触发该事件。 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>mx.rpc.events.FaultEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 当与服务端交互失败时触发该事件。 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.supermap.web.iServerJava6R.themeServices:RemoveThemeService_com.supermap.web.iServerJava6R.serviceEvents.RemoveThemeEvent_processComplete"><apiName>processComplete</apiName><shortdesc>
	 当与服务端交互成功完成时触发该事件。 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.supermap.web.iServerJava6R.serviceEvents.RemoveThemeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 当与服务端交互成功完成时触发该事件。 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:RemoveThemeService:RemoveThemeService"><apiName>RemoveThemeService</apiName><shortdesc>
		 使用服务地址初始化 RemoveThemeService 类的新实例。 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiDesc>服务地址。
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 使用服务地址初始化 RemoveThemeService 类的新实例。 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.supermap.web.iServerJava6R.themeServices:RemoveThemeService:processAsync"><apiName>processAsync</apiName><shortdesc>
		 根据服务地址与服务端完成异步通信，即将客户端定义的移除专题图参数 RemoveThemeParameters 传递至服务端，并获取服务端返回的结果信息。.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>该返回类型为异步 RPC 操作提供设置额外数据或标记级别数据的位置。
		 
		 </apiDesc><apiType value="mx.rpc:AsyncToken"/></apiReturn><apiParam><apiItemName>parameters</apiItemName><apiOperationClassifier>com.supermap.web.iServerJava6R.themeServices:RemoveThemeParameters</apiOperationClassifier><apiDesc>移除专题图时需要向服务端传递的参数。
		 </apiDesc></apiParam><apiParam><apiItemName>responder</apiItemName><apiType value="mx.rpc:IResponder"/><apiData>null</apiData><apiDesc>由 AsyncResponder 类实现。远程或异步请求服务完成时将调用的处理函数。使用方法为<br/>AsyncResponder(result:Function, fault:Function, token:Object = null)<br/>result:Function — 成功完成请求时应调用的函数。必须具有以下签名：<br/>public function (result:Object, token:Object = null):void;   <br/>fault:Function — 请求完成但出错时应调用的函数。必须具有以下签名：<br/>public function (error:FaultEvent, token:Object = null):void;  <br/>token:Object (default = null) — 与此请求相关的其他信息。  <br/>有关 AsyncResponder 类的详细信息请参见 “ActionScript 语言帮助文档”。
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 根据服务地址与服务端完成异步通信，即将客户端定义的移除专题图参数 RemoveThemeParameters 传递至服务端，并获取服务端返回的结果信息。.
		 <p>当专题图移除成功时，触发 RemoveThemeEvent.PROCESS_COMPLETE 事件。因此用户可以通过两种方式获取移除专题图后服务端返回的结果：<br/>1. 通过 AsyncResponder 类获取（推荐使用）；<br/>2. 通过监听 RemoveThemeEvent.PROCESS_COMPLETE 事件获取。</p> 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.supermap.web.iServerJava6R.themeServices:RemoveThemeService:lastResult:get"><apiName>lastResult</apiName><shortdesc>
		 获取服务端返回的移除专题图结果数据，RemoveThemeResult 类。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:RemoveThemeResult</apiValueClassifier></apiValueDef><apiDesc>
		 获取服务端返回的移除专题图结果数据，RemoveThemeResult 类。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbolStyle"><apiName>ThemeGraduatedSymbolStyle</apiName><shortdesc>
	 等级符号专题图正负零值显示风格类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 等级符号专题图正负零值显示风格类.
	 <p>通过该类可以设置正值、零值、负值对应的等级符号显示风格，以及是否显示零值或负值对应的等级符号。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbolStyle:ThemeGraduatedSymbolStyle"><apiName>ThemeGraduatedSymbolStyle</apiName><shortdesc>
		 初始化 ThemeGraduatedSymbolStyle 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeGraduatedSymbolStyle 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbolStyle:negativeDisplayed:get"><apiName>negativeDisplayed</apiName><shortdesc>
		 是否显示负值。默认为 false。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 是否显示负值。默认为 false。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbolStyle:negativeStyle:get"><apiName>negativeStyle</apiName><shortdesc>
		 负值的等级符号风格。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerStyle</apiValueClassifier></apiValueDef><apiDesc>
		 负值的等级符号风格。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbolStyle:positiveStyle:get"><apiName>positiveStyle</apiName><shortdesc>
		 正值的等级符号风格。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerStyle</apiValueClassifier></apiValueDef><apiDesc>
		 正值的等级符号风格。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbolStyle:zeroDisplayed:get"><apiName>zeroDisplayed</apiName><shortdesc>
		 是否显示0值的等级符号。默认为 false。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 是否显示0值的等级符号。默认为 false。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbolStyle:zeroStyle:get"><apiName>zeroStyle</apiName><shortdesc>
		 0值的等级符号风格。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerStyle</apiValueClassifier></apiValueDef><apiDesc>
		 0值的等级符号风格。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:LabelThemeCell"><apiName>LabelThemeCell</apiName><shortdesc>
	 专题图类型的矩阵标签元素类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.supermap.web.iServerJava6R.themeServices:LabelMatrixCell</apiBaseClassifier></apiClassifierDef><apiDesc>
	 专题图类型的矩阵标签元素类.
	 <p>矩阵标签专题图是标签专题图（ThemeLabel）的一种，其中矩阵标签中的填充元素又可分为图片类型（LabelImageCell）、符号类型（LabelSymbolCell）、专题图类型（LabelThemeCell）三种，专题图类型的矩阵标签元素其实质是利用标签专题图（ThemeLabel）做为矩阵标签中的填充内容。将这个矩阵标签元素赋予 ThemeLabel.matrixCells 即可生成矩阵标签专题图，相当于 ThemeLabel 对象中嵌套了一个 ThemeLabel 子项，其显示效果与直接定义 ThemeLabel 是相同的，不同在于前者是以矩阵的形式展示的，并可加入其它类型的矩阵标签元素；而后者则有且仅有一个元素，且为文本型。该类用于定义制作专题图矩阵标签时的专题图—— ThemeLabel。<br/>用户在实现矩阵标签专题图时只需将定义好的矩阵标签元素赋值予 ThemeLabel.matrixCells 属性即可。matrixCells 属性是一个二维数组，每一维可以是任意类型的矩阵标签元素组成的数组（也可是单个标签元素组成的数组，即数组中只有一个元素）。如下图为生成的矩阵标签专题图中的一个标签，由符号类型的矩阵标签元素（LabelSymbolCell，左）、专题图类型的矩阵标签元素（LabelThemeCell，右）组成，此时的 matrixCells 属性为一个 1*2 维的数组（即一行两列）。<br/><img src="../../../../../images/MatrixLabel.png"/></p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:LabelThemeCell:LabelThemeCell"><apiName>LabelThemeCell</apiName><shortdesc>
		 初始化 LabelThemeCell 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 LabelThemeCell 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelThemeCell:themeLabel:get"><apiName>themeLabel</apiName><shortdesc>
		 获取或设置用于制作专题图类型的矩阵标签元素的专题图—— ThemeLabel 对象。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeLabel</apiValueClassifier></apiValueDef><apiDesc>
		 获取或设置用于制作专题图类型的矩阵标签元素的专题图—— ThemeLabel 对象。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelAlongLine"><apiName>ThemeLabelAlongLine</apiName><shortdesc>
	 标签沿线标注样式类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 标签沿线标注样式类.
	 <p>通过该类可以设置标签是否沿线标注以及沿线标注的样式。沿线标注属性只适用于线数据集专题图。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelAlongLine:ThemeLabelAlongLine"><apiName>ThemeLabelAlongLine</apiName><shortdesc>
		 初始化 ThemeLabelAlongLine 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeLabelAlongLine 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelAlongLine:alongLineDirection:get"><apiName>alongLineDirection</apiName><shortdesc>
		 标签沿线标注方向。默认为 AlongLineDirection.LB_TO_RT（从下到上，从左到右放置）。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 标签沿线标注方向。默认为 AlongLineDirection.LB_TO_RT（从下到上，从左到右放置）。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelAlongLine:alongLine:get"><apiName>alongLine</apiName><shortdesc>
		 是否沿线显示文本。true 表示沿线显示文本，false 表示正常显示文本，默认为 true。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 是否沿线显示文本。true 表示沿线显示文本，false 表示正常显示文本，默认为 true。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelAlongLine:angleFixed:get"><apiName>angleFixed</apiName><shortdesc>
		 当沿线显示文本时，是否将文本角度固定，默认为 false.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 当沿线显示文本时，是否将文本角度固定，默认为 false.
		 <p>true 表示按固定文本角度显示文本，false 表示按照沿线角度显示文本。如果固定角度，则所有标签均按所设置的文本风格（ThemeLabel.text 或 ThemeLabelItem.style）中字体的旋转角度来显示，不考虑沿线标注的方向；如果不固定角度，在显示标签时会同时考虑字体的旋转角度和沿线标注的方向。示意图如下：<br/><img src="../../../../../images/angleFixed_iServer6.bmp"/><img src="../../../../../images/angleunFixed_iServer6.bmp"/></p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelAlongLine:isLabelRepeated:get"><apiName>isLabelRepeated</apiName><shortdesc>
		 沿线标注时是否进行循环标注，默认为 false 表示不循环标注.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 沿线标注时是否进行循环标注，默认为 false 表示不循环标注.
		 <p>例如：用于道路标注时，需要设定是否每隔一段距离重复显示道路标注。默认为 false，表示不循环标注。该属性只有当标签沿线标注时，即 isAlongLine 为 true 时有效，其效果如下：<br/><img src="../../../../../images/repeatedLabel_iServer6.bmp"/></p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelAlongLine:labelRepeatInterval:get"><apiName>labelRepeatInterval</apiName><shortdesc>
		 沿线且循环标记时标签之间的间隔，默认值为 0，单位为地图单位.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 沿线且循环标记时标签之间的间隔，默认值为 0，单位为地图单位.
		 <p>只有设定 isLabelRepeated、isAlongLine 为 true 的时候，labelRepeatInterval 属性才有效。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelAlongLine:repeatIntervalFixed:get"><apiName>repeatIntervalFixed</apiName><shortdesc>
		 循环标注间隔是否固定，默认为 false.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 循环标注间隔是否固定，默认为 false.
		 <p>true 表示使用固定循环标注间隔，即使用逻辑坐标来显示循环标注间隔；false 表示循环标注间隔随地图的缩放而变化，即使用地理坐标来显示循环标注间隔。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelAlongLine:repeatedLabelAvoided:get"><apiName>repeatedLabelAvoided</apiName><shortdesc>
		 沿线循环标注时是否避免标签重复标注，默认为 false，表示不避免重复标注.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 沿线循环标注时是否避免标签重复标注，默认为 false，表示不避免重复标注.
		 <p>例如：北京地铁四号线的线数据由4条子线段组成，如果不避免标签重复标注，则显示效果如左图，如果避免标签重复标注，系统会将这条折线的四个子线部分看成一条线来进行标注，其显示效果如右图：<br/><img src="../../../../../images/isReapeatedLabelAvoid_iServer6.bmp"/></p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:RemoveThemeParameters"><apiName>RemoveThemeParameters</apiName><shortdesc>
	 移除专题图参数类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 移除专题图参数类.
	 <p>移除专题图就是通过资源的 ID 号移除在服务端对应的资源。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:RemoveThemeParameters:RemoveThemeParameters"><apiName>RemoveThemeParameters</apiName><shortdesc>
		 初始化 RemoveThemeParameters 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 RemoveThemeParameters 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:RemoveThemeParameters:id:get"><apiName>id</apiName><shortdesc>
		 要移除的专题图资源的 ID 号。这个资源 ID 号在生成专题图的结果类 ThemeResult 中可以获取。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 要移除的专题图资源的 ID 号。这个资源 ID 号在生成专题图的结果类 ThemeResult 中可以获取。 
		 </apiDesc></apiValueDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#ThemeResult"><linktext>ThemeResult</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:RangeMode"><apiName>RangeMode</apiName><shortdesc>
	 范围分段专题图分段方式枚举类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 范围分段专题图分段方式枚举类. 
	 <p>该类列举出了六种用于分段方法：等距离、平方根、标准差、对数、等计数、自定义。</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="com.supermap.web.iServerJava6R.themeServices:RangeMode:CUSTOMINTERVAL"><apiName>CUSTOMINTERVAL</apiName><shortdesc>
		 自定义分段法.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>CUSTOMINTERVAL</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 自定义分段法.
		 <p>在自定义分段中，由用户指定各段的长度，即间隔距离来进行分段，分段数由 SuperMap 根据指定的间隔距离以及专题变量的最大和最小值来计算。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:RangeMode:EQUALINTERVAL"><apiName>EQUALINTERVAL</apiName><shortdesc>
		 等距离分段法.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>EQUALINTERVAL</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 等距离分段法.
		 <p>等距离分段是根据作为专题变量的字段或表达式的最大值和最小值，按照用户设定的分段数进行相等间距的分段。在等距离分段中，每一段具有相等的长度。按照这种分段方式，很有可能某个分段中没有数值，即落到该段中的记录或要素为0个。 </p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:RangeMode:LOGARITHM"><apiName>LOGARITHM</apiName><shortdesc>
		 对数分段法.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>LOGARITHM</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 对数分段法.
		 <p>对数分段方法的实现的原理与平方根分段方法基本相同，所不同的是平方根方法是对原数据取平方根，而对数分段方法是对原数据取对数，即对原数据的以10为底的对数值的等距离分段，其首先对原数据所有值的对数进行等距离分段，得到处理后数据的分段点，然后以10为底，这些分段点的值作为指数的幂得到原数据的各分段点的值，从而得到分段方案。适用于最大值与最小值相差很大，用等距离分段不是很理想的情况，对数分段法比平方根分段法具有更高的压缩率，使数据间的差异尺度更小，优化分段结果。数据中有负数则不适合这种方法。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:RangeMode:QUANTILE"><apiName>QUANTILE</apiName><shortdesc>
		 等计数分段法.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>QUANTILE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 等计数分段法.
		 <p>在等计数分段中，每个分段中具有相等数目的要素个数，当然，这个相等的个数是多少是由用户指定的分段数以及实际的要素个数来决定的，在可以均分的情况下，每段中对象数目应该是一样的，但是当对象数目不可均分时，分段结果在最后一段内会有出入，例如75个数据，分成8段，则每一段有9个要素，但最后一段只有3个要素。这种分段方法适合于线性分布的数据。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:RangeMode:SQUAREROOT"><apiName>SQUAREROOT</apiName><shortdesc>
		 平方根分段法.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>SQUAREROOT</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 平方根分段法.
		 <p>平方根分段方法实质上是对原数据的平方根的等距离分段，其首先取所有数据的平方根进行等距离分段，得到处理后数据的分段点，然后将这些分段点的值进行平方作为原数据的分段点，从而得到原数据的分段方案。所以，数据中有负数不适合这种方法。按照这种分段方式，很有可能某个分段中没有数值，即落到该段中的记录或要素为0个。该方法适用于一些特定数据，如最小值与最大值之间相差比较大时，用等距离分段法可能需要分成很多的段才能区分，用平方根分段方法可以压缩数据间的差异，用较少的分段数却比较准确地进行分段。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:RangeMode:STDDEVIATION"><apiName>STDDEVIATION</apiName><shortdesc>
		 标准差分段法.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>STDDEVIATION</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 标准差分段法.
		 <p>标准差分段方法反映了各要素的某属性值对其平均值的偏离。该方法首先计算出专题变量的平均值和标准偏差，在此基础上进行分段。标准差分段的每个分段长度都是一个标准差，最中间的那一段以平均值为中心，左边分段点和右边分段点分别与平均值相差0.5个标准差。标准差的段数由计算结果决定，用户不可控制。 </p> 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeRange"><apiName>ThemeRange</apiName><shortdesc>
	 范围分段专题图.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.supermap.web.iServerJava6R.themeServices:Theme</apiBaseClassifier></apiClassifierDef><apiDesc>
	 范围分段专题图.
	 <p>范围分段专题图是按照指定的分段方法（如：等距离分段法）对字段的属性值进行分段，使用不同的颜色或符号（线型、填充）表示不同范围段落的属性值在整体上的分布情况，体现区域的差异。<br/>在分段专题图中，专题值按照某种分段方式被分成多个范围段，要素根据各自的专题值被分配到其中一个范围段中，在同一个范围段中的要素使用相同的颜色，填充，符号等风格进行显示。分段专题图所基于的专题变量必须为数值型，分段专题图一般用来反映连续分布现象的数量或程度特征，如降水量的分布，土壤侵蚀强度的分布等。下图为一幅2000年中国各省人均 GDP 情况的分段专题图：<br/><img src="../../../../../images/ThemeRange_iServer6.bmp"/></p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeRange:ThemeRange"><apiName>ThemeRange</apiName><shortdesc>
		 初始化 ThemeRange 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeRange 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeRange:items:get"><apiName>items</apiName><shortdesc>
		 范围分段专题图子项（ThemeRangeItem）类数组，必设字段.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 范围分段专题图子项（ThemeRangeItem）类数组，必设字段.
		 <p>在分段专题图中，字段值按照某种分段模式被分成多个范围段，每个范围段即为一个子项，同一范围段的要素属于同一个分段专题图子项。每个子项都有其分段起始值、终止值、名称和风格等。每个分段所表示的范围为[start, end)。<br/>如果设置了范围分段模式和分段数，则会自动计算每段的范围[start, end)，故无需设置[start, end)；当然可以设置，那么结果就会按照您设置的值对分段结果进行调整。</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeRange:rangeExpression:get"><apiName>rangeExpression</apiName><shortdesc>
		 用于制作范围分段专题图的字段或字段表达式。必设字段.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 用于制作范围分段专题图的字段或字段表达式。必设字段.
		 <p>由于范围分段专题图基于各种分段方法根据一定的距离进行分段，因而范围分段专题图所基于的字段类型必须为数值型。对于字段表达式，只能为数值型的字段间的运算。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeRange:rangeMode:get"><apiName>rangeMode</apiName><shortdesc>
		 范围分段模式，RangeMode 枚举类常量。默认值为 RangeMode.EQUALINTERVAL（等距离分段）.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 范围分段模式，RangeMode 枚举类常量。默认值为 RangeMode.EQUALINTERVAL（等距离分段）.
		 <p>在分段专题图中，作为专题变量的字段或表达式的值按照某种分段方式被分成多个范围段。目前 SuperMap 提供的分段方式包括：等距离分段法、平方根分段法、标准差分段法、对数分段法、等计数分段法和自定义距离法，显然这些分段方法根据一定的距离进行分段，因而范围分段专题图所基于的专题变量必须为数值型。<br/>如果设置了范围分段模式和分段数，则会自动计算每段的范围[start, end)，故无需设置[start, end)；当然可以设置，那么结果就会按您设置的值对分段结果进行调整。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeRange:rangeParameter:get"><apiName>rangeParameter</apiName><shortdesc>
		 分段参数.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 分段参数.
		 <p>当分段模式为等距离分段法，平方根分段，对数分段法，计数分段法其中一种模式时，该参数用于设置分段个数，必设；当分段模式为标准差分段法时，该参数不起作用；当分段模式为自定义距离时，该参数用于设置自定义距离。默认值为 -1。<br/>如果设置了范围分段模式和分段数，则会自动计算每段的范围[start, end)，故无需设置[start, end)；当然也可以设置，那么结果就会按您设置的值对分段结果进行调整。</p> 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeDotDensity"><apiName>ThemeDotDensity</apiName><shortdesc>
	 点密度专题图.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.supermap.web.iServerJava6R.themeServices:Theme</apiBaseClassifier></apiClassifierDef><apiDesc>
	 点密度专题图.
	 <P>点密度专题图使用点的个数或密集程度来反映一个区域或范围某一专题数据的值，因此只有面数据才能制作点密度专题图。<br/>点密度专题图的一个点代表了一定数值，则一个区域内点的个数乘以一个点所表示的数值就是此区域对应的专题数据的值。例如指定一个点代表1000，则若一个区域的人口为1000000，则该区域点的个数为1000个。影响点密度专题图显示风格和效果的参数主要是：点代表的值和点风格。<br/>如下图所示，中部六省地图中，对1990年人口数量使用点密度来表示，设置基准值为10万人（即一个点代表10万人）：<br/> <img src="../../../../../images/ThemeDotDensity.png"/></P> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeDotDensity:ThemeDotDensity"><apiName>ThemeDotDensity</apiName><shortdesc>
		 初始化 ThemeDotDensity 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeDotDensity 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeDotDensity:dotExpression:get"><apiName>dotExpression</apiName><shortdesc>
		 用于创建点密度专题图的字段或字段表达式，字段或字段表达式应为数值型。必设参数。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 用于创建点密度专题图的字段或字段表达式，字段或字段表达式应为数值型。必设参数。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeDotDensity:style:get"><apiName>style</apiName><shortdesc>
		 定义点密度专题图中用于渲染的符号显示样式。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerStyle</apiValueClassifier></apiValueDef><apiDesc>
		 定义点密度专题图中用于渲染的符号显示样式。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeDotDensity:value:get"><apiName>value</apiName><shortdesc>
		 专题图中每一个点所代表的数值，即基准值。单位同 dotExpression 属性，默认值为 200.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 专题图中每一个点所代表的数值，即基准值。单位同 dotExpression 属性，默认值为 200.
		 <p>例如一个区域的人口为1000000，设置基准值为1000，则该区域点的个数为1000个。<br/>点值的确定与地图比例尺以及点的大小有关。地图比例尺越大，点可以越多，此时点值就可以设置相对小一些。点形状越大，点值相应就应该设置大一些。尽量做到点符号之间无层叠，点密度较紧凑，能清楚区分各个面域间点密度的差异和专题图美观。</p> 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphAxes"><apiName>ThemeGraphAxes</apiName><shortdesc>
	 统计专题图坐标轴样式类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 统计专题图坐标轴样式类.
	 <p>该类用于设置统计图中坐标轴样式相关信息，如坐标轴颜色、是否显示、坐标文本样式等。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphAxes:ThemeGraphAxes"><apiName>ThemeGraphAxes</apiName><shortdesc>
		 初始化 ThemeGraphAxes 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeGraphAxes 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphAxes:axesColor:get"><apiName>axesColor</apiName><shortdesc>
		 坐标轴颜色，默认为黑色。当 <code>axesDisplayed = true</code> 时有效。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerColor</apiValueClassifier></apiValueDef><apiDesc>
		 坐标轴颜色，默认为黑色。当 <code>axesDisplayed = true</code> 时有效。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphAxes:axesDisplayed:get"><apiName>axesDisplayed</apiName><shortdesc>
		 是否显示坐标轴。默认为 false，即不显示.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 是否显示坐标轴。默认为 false，即不显示.
		 <p>由于饼状图和环状图无坐标轴，故该属性以及所有与坐标轴设置相关的属性都不适用于它们。并且只有当该值为 true 时，其它设置坐标轴的属性才起作用。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphAxes:axesGridDisplayed:get"><apiName>axesGridDisplayed</apiName><shortdesc>
		 是否在统计图坐标轴上显示网格。默认为 false，即不显示。当 <code>axesDisplayed = true</code> 时有效。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 是否在统计图坐标轴上显示网格。默认为 false，即不显示。当 <code>axesDisplayed = true</code> 时有效。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphAxes:axesTextDisplayed:get"><apiName>axesTextDisplayed</apiName><shortdesc>
		 是否显示坐标轴的文本标注。默认为 false，即不显示。当 <code>axesDisplayed = true</code> 时有效。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 是否显示坐标轴的文本标注。默认为 false，即不显示。当 <code>axesDisplayed = true</code> 时有效。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphAxes:axesTextStyle:get"><apiName>axesTextStyle</apiName><shortdesc>
		 ServerTextStyle 对象。获取或设置坐标轴文本显示风格。当 <code>axesTextDisplayed = true</code> 时有效。
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerTextStyle</apiValueClassifier></apiValueDef><apiDesc>
		 ServerTextStyle 对象。获取或设置坐标轴文本显示风格。当 <code>axesTextDisplayed = true</code> 时有效。
		 </apiDesc></apiValueDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#ThemeGraphAxes/axesTextDisplayed"><linktext>axesTextDisplayed</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphSize"><apiName>ThemeGraphSize</apiName><shortdesc>
	 统计专题图符号尺寸设置类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 统计专题图符号尺寸设置类.
	 <p>通过该类可以设置统计专题图符号最小和最大的基准尺寸 。专题图表的尺寸大小与基准值、分级方式及专题字段值的大小都有着紧密联系。它是利用指定的分级方式，最大基准尺寸、最小基准值以及字段的最大值和最小值计算统计图中各个值对应的图表尺寸的大小。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphSize:ThemeGraphSize"><apiName>ThemeGraphSize</apiName><shortdesc>
		 初始化 ThemeGraphSize 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeGraphSize 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphSize:maxGraphSize:get"><apiName>maxGraphSize</apiName><shortdesc>
		 获取或设置统计图中显示的最大图表尺寸基准值，默认为0像素。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 获取或设置统计图中显示的最大图表尺寸基准值，默认为0像素。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphSize:minGraphSize:get"><apiName>minGraphSize</apiName><shortdesc>
		 统计图中显示的最小图表尺寸基准值，默认为0像素。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 统计图中显示的最小图表尺寸基准值，默认为0像素。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:LabelMatrixCellType"><apiName>LabelMatrixCellType</apiName><shortdesc>
	 矩阵标签类型枚举类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 矩阵标签类型枚举类.
	 <p>该类列举了三种矩阵标签类型：图片、符号、专题图。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelMatrixCellType:IMAGE"><apiName>IMAGE</apiName><shortdesc>
		 图片类型，对应于 LabelImageCell。  
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>IMAGE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 图片类型，对应于 LabelImageCell。  
		 </apiDesc></apiValueDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelImageCell"><linktext>LabelImageCell</linktext></link></related-links></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelMatrixCellType:SYMBOL"><apiName>SYMBOL</apiName><shortdesc>
		 符号类型，对应于 LabelSymbolCell。  
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>SYMBOL</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 符号类型，对应于 LabelSymbolCell。  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelMatrixCellType:THEME"><apiName>THEME</apiName><shortdesc>
		 专题图类型，对应于 LabelThemeCell。  
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>THEME</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 专题图类型，对应于 LabelThemeCell。  
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphTextFormat"><apiName>ThemeGraphTextFormat</apiName><shortdesc>
	 统计专题图文本显示格式.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 统计专题图文本显示格式.
	 <p>在统计专题图中，可以设置各子项文本的显示形式，包括百分数 PERCENT 、真实数值 VALUE、标题 CAPTION、标题+百分数 CAPTION_PERCENT、标题+真实数值 CAPTION_VALUE 五种形式。以下图示均以三维柱状图为例。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphTextFormat:CAPTION_PERCENT"><apiName>CAPTION_PERCENT</apiName><shortdesc>
		 标题 + 百分数。以各子项的标题和所占的百分比来进行标注。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>CAPTION_PERCENT</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 标题 + 百分数。以各子项的标题和所占的百分比来进行标注。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphTextFormat:CAPTION_VALUE"><apiName>CAPTION_VALUE</apiName><shortdesc>
		 标题 + 实际数值。以各子项的标题和真实数值来进行标注。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>CAPTION_VALUE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 标题 + 实际数值。以各子项的标题和真实数值来进行标注。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphTextFormat:CAPTION"><apiName>CAPTION</apiName><shortdesc>
		 标题。以各子项的标题来进行标注。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>CAPTION</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 标题。以各子项的标题来进行标注。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphTextFormat:PERCENT"><apiName>PERCENT</apiName><shortdesc>
		 百分数。以各子项所占的百分比来进行标注。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>PERCENT</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 百分数。以各子项所占的百分比来进行标注。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphTextFormat:VALUE"><apiName>VALUE</apiName><shortdesc>
		 实际数值。以各子项的真实数值来进行标注。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>VALUE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 实际数值。以各子项的真实数值来进行标注。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:LabelOverLengthMode"><apiName>LabelOverLengthMode</apiName><shortdesc>
	 标签专题图中超长标签的处理模式枚举类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 标签专题图中超长标签的处理模式枚举类. 
	 <p>SuperMap 提供三种超长标签的处理方式来控制超长标签的显示行为。所谓超长标签就是标签的长度超过设置的标签最大长度 maxLabelLength 的值。</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelOverLengthMode:NEWLINE"><apiName>NEWLINE</apiName><shortdesc>
		 换行显示。此模式将超长标签中超出指定标签最大长度的部分换行显示，即用多行来显示超长标签。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>NEWLINE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 换行显示。此模式将超长标签中超出指定标签最大长度的部分换行显示，即用多行来显示超长标签。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelOverLengthMode:NONE"><apiName>NONE</apiName><shortdesc>
		 对超长标签不进行处理。此为默认模式，即在一行中全部显示此超长标签。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>NONE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 对超长标签不进行处理。此为默认模式，即在一行中全部显示此超长标签。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelOverLengthMode:OMIT"><apiName>OMIT</apiName><shortdesc>
		 省略超出部分。此模式将超长标签中超出指定标签最大长度（maxLabelLength）的部分用省略号表示。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>OMIT</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 省略超出部分。此模式将超长标签中超出指定标签最大长度（maxLabelLength）的部分用省略号表示。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeUnique"><apiName>ThemeUnique</apiName><shortdesc>
	 单值专题图.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.supermap.web.iServerJava6R.themeServices:Theme</apiBaseClassifier></apiClassifierDef><apiDesc>
	 单值专题图.
	 <p>单值专题图是利用不同的颜色或符号（线型、填充）表示图层中某一属性信息的不同属性值，属性值相同的要素具有相同的渲染风格。单值专题图多用于具有分类属性的地图上，比如土壤类型分布图、土地利用图、行政区划图等。单值专题图着重表示现象质的差别，一般不表示数量的特征。尤其是有交叉或重叠现象时，此类不推荐使用，例如：民族分布区等。下图为山东省行政区划单值专题图，下图中每一种颜色代表一个行政区：<br/><img src="../../../../../images/ThemeUnique_iServer6.bmp"/></p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeUnique:ThemeUnique"><apiName>ThemeUnique</apiName><shortdesc>
		 初始化 ThemeUnique 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeUnique 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeUnique:defaultStyle:get"><apiName>defaultStyle</apiName><shortdesc>
		 ServerStyle 对象，定义未参与单值专题图制作的对象的显示风格.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerStyle</apiValueClassifier></apiValueDef><apiDesc>
		 ServerStyle 对象，定义未参与单值专题图制作的对象的显示风格.
		 <p>通过单值专题图子项数组 （items）可以指定某些要素参与单值专题图制作，对于那些没有被包含的要素，即不参加单值专题表达的要素，使用该风格显示。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeUnique:items:get"><apiName>items</apiName><shortdesc>
		 单值专题图子项（ThemeUniqueItem）类数组.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 单值专题图子项（ThemeUniqueItem）类数组.
		 <p>在单值专题图中，将字段或表达式值相同的要素归为一类，为每一类设定一种渲染风格，其中每一类就是一个专题图子项。每个子项包含描述、字段值、可见性和显示风格属性。</p> 
		 </apiDesc></apiValueDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#ThemeUniqueItem"><linktext>ThemeUniqueItem</linktext></link></related-links></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeUnique:uniqueExpression:get"><apiName>uniqueExpression</apiName><shortdesc>
		 用于制作单值专题图的字段或字段表达式。必设字段.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 用于制作单值专题图的字段或字段表达式。必设字段.
		 <p>该字段值的数据类型可以为数值型或字符型。如果设置字段表达式，只能是相同数据类型字段间的运算。</p> 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphText"><apiName>ThemeGraphText</apiName><shortdesc>
	 统计图文字标注风格.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 统计图文字标注风格. 
	 <p>通过该类可以设置统计图表中文字可见性以及标注风格等。</p>
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphText:ThemeGraphText"><apiName>ThemeGraphText</apiName><shortdesc>
		 初始化 ThemeGraphText 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeGraphText 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphText:graphTextDisplayed:get"><apiName>graphTextDisplayed</apiName><shortdesc>
		 是否显示统计图上的文字标注。默认为 false，即不显示。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 是否显示统计图上的文字标注。默认为 false，即不显示。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphText:graphTextFormat:get"><apiName>graphTextFormat</apiName><shortdesc>
		 ThemeGraphTextFormat 枚举类常量。获取或设置统计专题图文本显示格式.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 ThemeGraphTextFormat 枚举类常量。获取或设置统计专题图文本显示格式.
		 <p>文本显示格式包括百分数、真实数值、标题、标题+百分数、标题+真实数值。默认为 SuperMap.Web.iServerJava6R.ThemeGraphTextFormat.CAPTION。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphText:graphTextStyle:get"><apiName>graphTextStyle</apiName><shortdesc>
		 ServerTextStyle 对象，用于设置统计图上的文字标注风格。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerTextStyle</apiValueClassifier></apiValueDef><apiDesc>
		 ServerTextStyle 对象，用于设置统计图上的文字标注风格。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbol"><apiName>ThemeGraduatedSymbol</apiName><shortdesc>
	 等级符号专题图.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.supermap.web.iServerJava6R.themeServices:Theme</apiBaseClassifier></apiClassifierDef><apiDesc>
	 等级符号专题图. 
	 <p>等级符号专题图是利用符号的大小来表示图层的数值型的某一字段或字段表达式的值。等级符号专题图多用于具有数量特征的地图，比如表示不同地区的粮食产量、GDP、人口等的分级。</p>
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbol:ThemeGraduatedSymbol"><apiName>ThemeGraduatedSymbol</apiName><shortdesc>
		 初始化 ThemeGraduatedSymbol 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeGraduatedSymbol 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbol:baseValue:get"><apiName>baseValue</apiName><shortdesc>
		 等级符号专题图的基准值，单位同 expression 所指定字段对应的值经过分级计算之后的值.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 等级符号专题图的基准值，单位同 expression 所指定字段对应的值经过分级计算之后的值.
		 <p>依据此值系统会自动根据分级方式计算其余值对应的符号大小，每个符号的显示大小等于 <code>ThemeValueSection.positiveStyle（或 zeroStyle，negativeStyle）.markerSize * value / basevalue</code>，其中 value 是 expression 所指定字段对应的值经过分级计算之后的值。建议通过多次尝试设置该值才能达到较好的显示效果。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbol:expression:get"><apiName>expression</apiName><shortdesc>
		 用于创建等级符号专题图的字段或字段表达式，字段或字段表达式应为数值型。必设字段。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 用于创建等级符号专题图的字段或字段表达式，字段或字段表达式应为数值型。必设字段。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbol:flow:get"><apiName>flow</apiName><shortdesc>
		 等级符号专题图符号流动显示与牵引线设置类。通过该字段可以设置等级符号是否流动显示和牵引线风格。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeFlow</apiValueClassifier></apiValueDef><apiDesc>
		 等级符号专题图符号流动显示与牵引线设置类。通过该字段可以设置等级符号是否流动显示和牵引线风格。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbol:graduatedMode:get"><apiName>graduatedMode</apiName><shortdesc>
		 等级符号专题图分级模式.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>GraduatedMode.CONSTANT
		 </apiDefaultValue></apiValueDef><apiDesc>
		 等级符号专题图分级模式.
		 <p>分级主要是为了减少制作等级符号专题图中数据大小之间的差异。如果数据之间差距较大，则可以采用对数或者平方根的分级方式来进行，这样就减少了数据之间的绝对大小的差异，使得等级符号图的视觉效果比较好，同时不同类别之间的比较也是有意义的。<br/>有三种分级模式：常数、对数和平方根，对于有值为负数的字段，不可以采用对数和平方根的分级方式。不同的分级模式用于确定符号大小的数值是不相同的：常数按照字段的原始数据进行；对数则是对每条记录对应的专题变量取自然对数；平方根则是对其取平方根，然后用最终得到的结果来确定其等级符号的大小。默认值为 GraduatedMode.CONSTANT。</p> 
		 </apiDesc></apiValueDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#GraduatedMode"><linktext>GraduatedMode</linktext></link></related-links></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbol:offset:get"><apiName>offset</apiName><shortdesc>
		 用于设置等级符号图相对于要素内点的偏移量。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeOffset</apiValueClassifier></apiValueDef><apiDesc>
		 用于设置等级符号图相对于要素内点的偏移量。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbol:style:get"><apiName>style</apiName><shortdesc>
		 ThemeGraduatedSymbolStyle 对象。用于设置等级符号图正负和零值显示风格。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:ThemeGraduatedSymbolStyle</apiValueClassifier></apiValueDef><apiDesc>
		 ThemeGraduatedSymbolStyle 对象。用于设置等级符号图正负和零值显示风格。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:LabelMixedTextStyle"><apiName>LabelMixedTextStyle</apiName><shortdesc>
	 标签文本组合风格类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 标签文本组合风格类.
	 <p>该类主要用于对标签专题图中标签的文本内容进行风格设置。通过该类用户可以使同一标签中的文字显示为不同的风格，比如文本 “喜马拉雅山”，通过本类可以将前三个字用红色显示，后两个字用蓝色显示。<br/>对同一文本设置不同的风格实质上是对文本的字符进行分段，同一分段内的字符具有相同的显示风格。对字符分段有两种方式，一种是利用分隔符对文本进行分段；另一种是根据分段索引值进行分段。<br/>1. 利用分隔符对文本进行分段: 比如文本 “5&amp;109” 被分隔符 “&amp;” 分为“5”和“109”两部分，在显示时，“5” 和分隔符 “&amp;” 使用同一个风格，字符串 “109” 使用相同的风格。<br/>2. 利用分段索引值进行分段: 文本中字符的索引值是以0开始的整数，比如文本“珠穆朗玛峰”，第一个字符（“珠”）的索引值为0，第二个字符（“穆”）的索引值为1，以此类推；当设置分段索引值为1，3，4，9时，字符分段范围相应的就是(-∞，1)，[1，3)，[3，4)，[4，9)，[9，+∞)，可以看出索引号为0的字符（即“珠” ）在第一个分段内，索引号为1，2的字符（即“穆”、“朗”）位于第二个分段内，索引号为3的字符（“玛”）在第三个分段内，索引号为4的字符（“峰”）在第四个分段内，其余分段中没有字符。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:LabelMixedTextStyle:LabelMixedTextStyle"><apiName>LabelMixedTextStyle</apiName><shortdesc>
		 初始化 LabelMixedTextStyle 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 LabelMixedTextStyle 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelMixedTextStyle:defaultStyle:get"><apiName>defaultStyle</apiName><shortdesc>
		 ServerTextStyle 对象，默认的文本显示风格。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerTextStyle</apiValueClassifier></apiValueDef><apiDesc>
		 ServerTextStyle 对象，默认的文本显示风格。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelMixedTextStyle:separatorEnabled:get"><apiName>separatorEnabled</apiName><shortdesc>
		 文本的分隔符是否有效，默认为 false，即无效.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 文本的分隔符是否有效，默认为 false，即无效.
		 <p>true 表示有效，即根据 sparator 属性指定的分隔符对文本进行分段；false 表示无效，却根据 splitIndexes 属性指定的索引数组对文本进行分段。分段后，同一分段内的字符具有相同的显示风格。</p> 
		 </apiDesc></apiValueDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelMixedTextStyle/separator"><linktext>separator</linktext></link><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelMixedTextStyle/splitIndexes"><linktext>splitIndexes</linktext></link></related-links></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelMixedTextStyle:separator:get"><apiName>separator</apiName><shortdesc>
		 分段分隔符，用于对文本按分隔符进行分段。注意：分隔符自身的风格与前一个字符的风格一样.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 分段分隔符，用于对文本按分隔符进行分段。注意：分隔符自身的风格与前一个字符的风格一样.
		 <p>文本的分隔符是一个将文本分割开的符号，比如文本 “5_109” 被 “_” 隔符为 “5” 和 “109” 两部分，假设有风格数组：style1、style2。在显示时，“5” 和分隔符 “_” 使用 Style1 风格渲染，字符串 “109” 使用 Style2 的风格。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelMixedTextStyle:splitIndexes:get"><apiName>splitIndexes</apiName><shortdesc>
		 分段索引值数组，分段索引值用来对文本按索引进行分段.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 分段索引值数组，分段索引值用来对文本按索引进行分段.
		 <p>文本中字符的索引值是以0开始的整数，比如文本“珠穆朗玛峰”，第一个字符（“珠”）的索引值为0，第二个字符（“穆”）的索引值为1，以此类推；当设置分段索引值数组为[1，3，4，9]时，字符分段范围相应的就是(-∞，1)，[1，3)，[3，4)，[4，9)，[9，+∞)，可以看出索引号为0的字符（即“珠” ）在第一个分段内，索引号为1，2的字符（即“穆”、“朗”）位于第二个分段内，索引号为3的字符（“玛”）在第三个分段内，索引号为4的字符（“峰”）在第四个分段内，其余分段中没有字符。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelMixedTextStyle:styles:get"><apiName>styles</apiName><shortdesc>
		 文本样式（ServerTextStyle）集合。该属性中的文本样式根据索引与不同分段一一对应.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 文本样式（ServerTextStyle）集合。该属性中的文本样式根据索引与不同分段一一对应.
		 <p>如果有分段没有风格对应则使用该类中的 defaultStyle 属性。</p> 
		 </apiDesc></apiValueDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelMixedTextStyle/defaultStyle"><linktext>defaultStyle</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeRangeItem"><apiName>ThemeRangeItem</apiName><shortdesc>
	 范围分段专题图子项类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 范围分段专题图子项类.
	 <p>在分段专题图中，字段值按照某种分段模式被分成多个范围段，每个范围段即为一个子项，同一范围段的要素属于同一个分段专题图子项。每个子项都有其分段起始值、终止值、名称和风格等。每个分段所表示的范围为[start, end)。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeRangeItem:ThemeRangeItem"><apiName>ThemeRangeItem</apiName><shortdesc>
		 初始化 ThemeRangeItem 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeRangeItem 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeRangeItem:caption:get"><apiName>caption</apiName><shortdesc>
		 范围分段专题图子项的标题。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 范围分段专题图子项的标题。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeRangeItem:end:get"><apiName>end</apiName><shortdesc>
		 范围分段专题图子项的终止值.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 范围分段专题图子项的终止值.
		 <p>即该段专题值范围的最大值。如果该子项是分段中最后一个子项，那么该终止值就是分段的最大值；如果不是最后一项，该终止值必须与其下一子项的起始值相同，否则系统抛出异常。<br/>如果设置了范围分段模式和分段数，则会自动计算每段的范围[start, end)，故无需设置[start, end)；当然可以设置，那么结果就会按您设置的值对分段结果进行调整。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeRangeItem:start:get"><apiName>start</apiName><shortdesc>
		 范围分段专题图子项的起始值.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 范围分段专题图子项的起始值.
		 <p>即该段专题值范围的最小值。如果该子项是分段中第一个子项，那么该起始值就是分段的最小值；如果子项的序号大于等于1的时候，该起始值必须与前一子项的终止值相同，否则系统会抛出异常。<br/>如果设置了范围分段模式和分段数，则会自动计算每段的范围[start, end)，故无需设置[start, end)；当然可以设置，那么结果就会按您设置的值对分段结果进行调整。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeRangeItem:style:get"><apiName>style</apiName><shortdesc>
		 ServerStyle 对象，范围分段专题图子项的显示风格。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerStyle</apiValueClassifier></apiValueDef><apiDesc>
		 ServerStyle 对象，范围分段专题图子项的显示风格。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeRangeItem:visible:get"><apiName>visible</apiName><shortdesc>
		 范围分段专题图子项的可见性。默认为 true，表示可见。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 范围分段专题图子项的可见性。默认为 true，表示可见。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeFlow"><apiName>ThemeFlow</apiName><shortdesc>
	 专题图中渲染符号流动显示和牵引线风格设置类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 专题图中渲染符号流动显示和牵引线风格设置类.
	 <p>通过该类可以设置专题图中渲染符号是否流动显示、是否使用牵引线以及牵引线风格。<br/>渲染符号流动显示是指：对于跨越比较大的区域和线条状的几何对象，在一个地图窗口中可能不能完全显示，当其渲染符号的位置比较固定，在当前地图窗口中该符号可能是不可见的。这时，则需要通过平移地图来查看对象的标签信息。如果采用了流动显示的效果，在当前地图窗口中，对象即使是部分显示，其渲染符号也会显示在当前地图窗口中。当平移地图时，对象的渲染符号会随之移动，以保证在当前地图窗口中部分或全部显示的对象其标签都可见，从而可以方便地查看各要素的符号信息。下图以标签专题图为例，分别表示不流动显示（左图）和流动显示（右图）条件下的专题图。<br/><img src="../../../../../images/unflowiServer6.bmp"/><img src="../../../../../images/leaderLineiServer6.bmp"/><br/>如右图，虽然俄罗斯、土耳其、伊朗三个国家的地理范围只是部分显示，但由于设置了流动显示功能，因此仍然可见指示这三个国家的标签。当移动地图时，标签也会随之移动<br/>根据上面的描述，可知所谓牵引线是指当专题图中渲染符号流动显示时，符号与其标注对象之间的连线（上图中未设置牵引线，在此只做定义）。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeFlow:ThemeFlow"><apiName>ThemeFlow</apiName><shortdesc>
		 初始化 ThemeFlow 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeFlow 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeFlow:flowEnabled:get"><apiName>flowEnabled</apiName><shortdesc>
		 是否流动显示专题图中的渲染符号 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 是否流动显示专题图中的渲染符号 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeFlow:leaderLineDisplayed:get"><apiName>leaderLineDisplayed</apiName><shortdesc>
		 是否显示渲染符号与其标注对象之间的牵引线。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 是否显示渲染符号与其标注对象之间的牵引线。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeFlow:leaderLineStyle:get"><apiName>leaderLineStyle</apiName><shortdesc>
		 渲染符号与其标注对象之间牵引线的风格。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerStyle</apiValueClassifier></apiValueDef><apiDesc>
		 渲染符号与其标注对象之间牵引线的风格。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeResult"><apiName>ThemeResult</apiName><shortdesc>
	 服务端返回的专题图结果类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 服务端返回的专题图结果类. 
	 <p>该类中包含了服务端生成的专题图资源信息（ResourceInfo）。</p>
	 </apiDesc></apiClassifierDetail><related-links><link href="com.supermap.web.iServerJava6R.queryServices.xml#ResourceInfo"><linktext>com.supermap.web.iServerJava6R.queryServices.ResourceInfo</linktext></link></related-links><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeResult:ThemeResult"><apiName>ThemeResult</apiName><shortdesc>
		 初始化 ThemeResult 的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeResult 的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeResult:resourceInfo:get"><apiName>resourceInfo</apiName><shortdesc>
		初始化 ThemeResult 的新实例。 
		
		</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.supermap.web.iServerJava6R.queryServices:ResourceInfo</apiValueClassifier></apiValueDef><apiDesc>
		初始化 ThemeResult 的新实例。 
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:LabelBackShape"><apiName>LabelBackShape</apiName><shortdesc>
	 标签专题图中标签的背景形状枚举类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 标签专题图中标签的背景形状枚举类.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelBackShape:DIAMOND"><apiName>DIAMOND</apiName><shortdesc>
		 菱形背景，即标签背景的形状为菱形。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DIAMOND</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 菱形背景，即标签背景的形状为菱形。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelBackShape:ELLIPSE"><apiName>ELLIPSE</apiName><shortdesc>
		 椭圆形背景，即标签背景的形状为椭圆形。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ELLIPSE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 椭圆形背景，即标签背景的形状为椭圆形。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelBackShape:MARKER"><apiName>MARKER</apiName><shortdesc>
		 符号背景，即标签背景的形状为设定的符号。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>MARKER</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 符号背景，即标签背景的形状为设定的符号。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelBackShape:NONE"><apiName>NONE</apiName><shortdesc>
		 空背景，即不使用任何形状作为标签的背景。此为默认值。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>NONE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 空背景，即不使用任何形状作为标签的背景。此为默认值。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelBackShape:RECT"><apiName>RECT</apiName><shortdesc>
		 矩形背景，即标签背景的形状为矩形。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>RECT</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 矩形背景，即标签背景的形状为矩形。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelBackShape:ROUNDRECT"><apiName>ROUNDRECT</apiName><shortdesc>
		 圆角矩形背景，即标签背景的形状为圆角矩形。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ROUNDRECT</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 圆角矩形背景，即标签背景的形状为圆角矩形。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelBackShape:TRIANGLE"><apiName>TRIANGLE</apiName><shortdesc>
		 三角形背景，即标签背景的形状为三角形。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>TRIANGLE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 三角形背景，即标签背景的形状为三角形。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphType"><apiName>ThemeGraphType</apiName><shortdesc>
	 统计专题图类型.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 统计专题图类型.
	 <p>该枚举主要用来设置制作的统计图的类型。提供了13种类型的统计图，分别为面积图、阶梯图、折线图、点状图、柱状图、三维柱状图、饼图、三维饼图、玫瑰图、三维玫瑰图、堆叠柱状图、三维堆叠柱状图、环状图。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphType:AREA"><apiName>AREA</apiName><shortdesc>
		 面积图。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>AREA</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 面积图。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphType:BAR3D"><apiName>BAR3D</apiName><shortdesc>
		 三维柱状图。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>BAR3D</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 三维柱状图。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphType:BAR"><apiName>BAR</apiName><shortdesc>
		  柱状图。
		  </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>BAR</apiData><apiType value="String"/></apiValueDef><apiDesc>
		  柱状图。
		  </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphType:LINE"><apiName>LINE</apiName><shortdesc>
		 折线图。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>LINE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 折线图。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphType:PIE3D"><apiName>PIE3D</apiName><shortdesc>
		 三维饼图。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>PIE3D</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 三维饼图。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphType:PIE"><apiName>PIE</apiName><shortdesc>
		 饼图。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>PIE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 饼图。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphType:POINT"><apiName>POINT</apiName><shortdesc>
		 点状图。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>POINT</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 点状图。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphType:RING"><apiName>RING</apiName><shortdesc>
		 环状图。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>RING</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 环状图。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphType:ROSE3D"><apiName>ROSE3D</apiName><shortdesc>
		 三维玫瑰图。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ROSE3D</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 三维玫瑰图。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphType:ROSE"><apiName>ROSE</apiName><shortdesc>
		  玫瑰图。
		  </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ROSE</apiData><apiType value="String"/></apiValueDef><apiDesc>
		  玫瑰图。
		  </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphType:STACK_BAR3D"><apiName>STACK_BAR3D</apiName><shortdesc>
		 三维堆叠柱状图。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>STACK_BAR3D</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 三维堆叠柱状图。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphType:STACK_BAR"><apiName>STACK_BAR</apiName><shortdesc>
		 堆叠柱状图。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>STACK_BAR</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 堆叠柱状图。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeGraphType:STEP"><apiName>STEP</apiName><shortdesc>
		 阶梯图。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>STEP</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 阶梯图。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelText"><apiName>ThemeLabelText</apiName><shortdesc>
	 标签专题图中文本风格类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 标签专题图中文本风格类.
	 <p>通过该类可以设置专题图中标签的文本字体大小和显示风格。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelText:ThemeLabelText"><apiName>ThemeLabelText</apiName><shortdesc>
		 初始化 ThemeLabelText 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeLabelText 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelText:maxTextHeight:get"><apiName>maxTextHeight</apiName><shortdesc>
		 标签中文本的最大高度.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 标签中文本的最大高度.
		 <p>当标签文本不固定大小时，即 <code>ServerTextStyle.sizeFixed = false</code> 有效，当放大后的文本高度超过最大高度之后就不再放大。单位为0.1毫米。高度单位为0.1毫米。默认为 0 毫米。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelText:maxTextWidth:get"><apiName>maxTextWidth</apiName><shortdesc>
		 标签中文本的最大宽度.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 标签中文本的最大宽度.
		 <p>当标签文本不固定大小时，即 <code>ServerTextStyle.sizeFixed = false</code> 有效，当放大后的文本宽度超过最大高度之后就不再放大。单位为0.1毫米。默认为0毫米。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelText:minTextHeight:get"><apiName>minTextHeight</apiName><shortdesc>
		 标签中文本的最小高度.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 标签中文本的最小高度.
		 <p>当标签文本不固定大小时，即 <code>ServerTextStyle.sizeFixed = false</code> 有效，当缩小后的文本高度小于最小高度之后就不再缩小。单位为0.1毫米。默认为0毫米</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelText:minTextWidth:get"><apiName>minTextWidth</apiName><shortdesc>
		 标签中文本的最小宽度.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 标签中文本的最小宽度.
		 <p>当标签文本不固定大小时，即 <code>ServerTextStyle.sizeFixed = false</code> 有效，当缩小后的文本宽度小于最小宽度之后就不再缩小。单位为0.1毫米。默认为0毫米。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelText:uniformMixedStyle:get"><apiName>uniformMixedStyle</apiName><shortdesc>
		 LabelMixedTextStyle 对象，标签专题图统一的文本组合风格.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.themeServices:LabelMixedTextStyle</apiValueClassifier></apiValueDef><apiDesc>
		 LabelMixedTextStyle 对象，标签专题图统一的文本组合风格.
		 <p>通过该类可以使同一个标签中的文字使用多种风格显示。比如文本 “喜马拉雅山”，通过本类可以将前三个字用红色显示，后两个字用蓝色显示。<br/>各种风格的优先级从高到低为：ThemeLabelText.uniformMixedStyle（标签文本的复合风格），ThemeLabelItem.style（分段子项的文本风格），ThemeLabelText.uniformStyle（统一文本风格）。</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeLabelText:uniformStyle:get"><apiName>uniformStyle</apiName><shortdesc>
		 统一文本风格，ServerTextStyle 对象.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.supermap.web.iServerJava6R.serverTypes:ServerTextStyle</apiValueClassifier></apiValueDef><apiDesc>
		 统一文本风格，ServerTextStyle 对象.
		 <p>当标签专题图子项的个数大于等于1时，uniformStyle 不起作用，各标签的风格使用子项中设置的风格。<br/>各种风格的优先级从高到低为：uniformMixedStyle（标签文本的复合风格），ThemeLabelItem.style（分段子项的文本风格），uniformStyle（统一文本风格）。</p> 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:Theme"><apiName>Theme</apiName><shortdesc>
	 专题图基类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 专题图基类.
	 <p>该类为各种类型专题图的抽象基类。专题图类型请参考 ThemeType 类。</p> 
	 </apiDesc></apiClassifierDetail><related-links><link href="com.supermap.web.iServerJava6R.layerServices.xml#ThemeType"><linktext>com.supermap.web.iServerJava6R.layerServices.ThemeType</linktext></link></related-links><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:Theme:Theme"><apiName>Theme</apiName><shortdesc>
		 初始化 Theme 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 Theme 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:ThemeParameters"><apiName>ThemeParameters</apiName><shortdesc>
	 专题图参数类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 专题图参数类.
	 <p>该类存储了制作专题时所需的参数，包括数据源名称、数据集名称以及专题图数组。</p> 
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:ThemeParameters:ThemeParameters"><apiName>ThemeParameters</apiName><shortdesc>
		 初始化 ThemeParameters 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 ThemeParameters 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeParameters:dataSourceName:get"><apiName>dataSourceName</apiName><shortdesc>
		 获取或设置用于制作专题图的数据集名称。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 获取或设置用于制作专题图的数据集名称。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeParameters:datasetName:get"><apiName>datasetName</apiName><shortdesc>
		 获取或设置用于制作专题图的数据源名称。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 获取或设置用于制作专题图的数据源名称。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:ThemeParameters:themes:get"><apiName>themes</apiName><shortdesc>
		 获取或设置点专题图对象集合。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 获取或设置点专题图对象集合。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:AlongLineDirection"><apiName>AlongLineDirection</apiName><shortdesc>
	 标签沿线标注方向枚举类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 标签沿线标注方向枚举类. 
	 <p>通过该类可以设置标签沿线放置的位置。规定，路线与水平方向的锐角夹角在60度以上用上下方向来表示，60度以下用左右方向来表示。</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="com.supermap.web.iServerJava6R.themeServices:AlongLineDirection:LB_TO_RT"><apiName>LB_TO_RT</apiName><shortdesc>
		 从下到上，从左到右放置标签。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>LEFT_BOTTOM_TO_RIGHT_TOP</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 从下到上，从左到右放置标签。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:AlongLineDirection:LT_TO_RB"><apiName>LT_TO_RB</apiName><shortdesc>
		 从上到下，从左到右放置标签。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>LEFT_TOP_TO_RIGHT_BOTTOM</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 从上到下，从左到右放置标签。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:AlongLineDirection:NORMAL"><apiName>NORMAL</apiName><shortdesc>
		 沿线的法线方向放置标签。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ALONG_LINE_NORMAL</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 沿线的法线方向放置标签。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:AlongLineDirection:RB_TO_LT"><apiName>RB_TO_LT</apiName><shortdesc>
		 从下到上，从右到左放置标签。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>RIGHT_BOTTOM_TO_LEFT_TOP</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 从下到上，从右到左放置标签。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:AlongLineDirection:RT_TO_LB"><apiName>RT_TO_LB</apiName><shortdesc>
		 从上到下，从右到左放置标签。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>RIGHT_TOP_TO_LEFT_BOTTOM</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 从上到下，从右到左放置标签。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.supermap.web.iServerJava6R.themeServices:LabelImageCell"><apiName>LabelImageCell</apiName><shortdesc>
	 图片类型的矩阵标签元素类.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.supermap.web.iServerJava6R.themeServices:LabelMatrixCell</apiBaseClassifier></apiClassifierDef><apiDesc>
	 图片类型的矩阵标签元素类.
	 <p>矩阵标签专题图是标签专题图（ThemeLabel）的一种，其中矩阵标签中的填充元素又可分为图片类型（LabelImageCell）、符号类型（LabelSymbolCell）、专题图类型（LabelThemeCell）三种，该类是这三种类型的矩阵标签元素其中的一种，用于定义图片类型的矩阵标签，如图片路径、旋转角度、宽高等。<br/>用户在实现矩阵标签专题图时只需将定义好的矩阵标签元素赋值予 ThemeLabel.matrixCells 属性即可。matrixCells 属是一个二维数组，每一维可以是任意类型的矩阵标签元素组成的数组（也可是单个标签元素组成的数组，即数组中只有一个元素）。如下图为生成的矩阵标签专题图中的一个标签，由符号类型的矩阵标签元素（LabelSymbolCell，左）、专题图类型的矩阵标签元素（LabelThemeCell，右）组成，此时的 matrixCells 属性为一个 1*2 维的数组（即一行两列）。<br/><img src="../../../../../images/MatrixLabel.png"/></p> 
	 </apiDesc></apiClassifierDetail><related-links><link href="com.supermap.web.iServerJava6R.themeServices.xml#ThemeLabel"><linktext>ThemeLabel</linktext></link><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelSymbolCell"><linktext>LabelSymbolCell</linktext></link><link href="com.supermap.web.iServerJava6R.themeServices.xml#LabelThemeCell"><linktext>LabelThemeCell</linktext></link></related-links><apiConstructor id="com.supermap.web.iServerJava6R.themeServices:LabelImageCell:LabelImageCell"><apiName>LabelImageCell</apiName><shortdesc>
		 初始化 LabelImageCell 类的新实例。 
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 初始化 LabelImageCell 类的新实例。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelImageCell:height:get"><apiName>height</apiName><shortdesc>
		 获取或设置图片高度。单位：毫米。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 获取或设置图片高度。单位：毫米。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelImageCell:pathField:get"><apiName>pathField</apiName><shortdesc>
		 获取或设置图片路径，必设属性。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 获取或设置图片路径，必设属性。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelImageCell:rotation:get"><apiName>rotation</apiName><shortdesc>
		 获取或设置图片的旋转角度。默认值为 0。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 获取或设置图片的旋转角度。默认值为 0。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelImageCell:sizeFixed:get"><apiName>sizeFixed</apiName><shortdesc>
		 图片的大小是否固定。false 表示不固定。默认为 false。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 图片的大小是否固定。false 表示不固定。默认为 false。 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="com.supermap.web.iServerJava6R.themeServices:LabelImageCell:width:get"><apiName>width</apiName><shortdesc>
		 获取或设置图片宽度。单位：毫米。 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 获取或设置图片宽度。单位：毫米。 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>
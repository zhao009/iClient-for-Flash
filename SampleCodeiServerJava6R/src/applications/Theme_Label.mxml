<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:ic="http://www.supermap.com/iclient/2010"
			   xmlns:isj6="http://www.supermap.com/iserverjava/2010" 
			   width="100%" height="100%"
			   creationComplete="initApp()">
	<!--标签专题图-->
	
	<fx:Script>
		<![CDATA[
			import com.supermap.web.utils.serverTypes.ServerColor;
			import com.supermap.web.utils.serverTypes.ServerTextStyle;
			import com.supermap.web.utils.serverTypes.TextAlignment;
			import com.supermap.web.iServerJava6R.themeServices.LabelOverLengthMode;
			import com.supermap.web.iServerJava6R.themeServices.RemoveThemeParameters;
			import com.supermap.web.iServerJava6R.themeServices.RemoveThemeResult;
			import com.supermap.web.iServerJava6R.themeServices.RemoveThemeService;
			import com.supermap.web.iServerJava6R.themeServices.ThemeLabel;
			import com.supermap.web.iServerJava6R.themeServices.ThemeLabelText;
			import com.supermap.web.iServerJava6R.themeServices.ThemeParameters;
			import com.supermap.web.iServerJava6R.themeServices.ThemeResult;
			import com.supermap.web.iServerJava6R.themeServices.ThemeService;
			
			import mx.rpc.*;
			import mx.rpc.events.FaultEvent;
			
			import utilEvent.ReadURLEvent;

			private var isTheme:Boolean = false;//判断是否已制作专题图
			private var themeLayer:TiledDynamicRESTLayer;
			private var viewConfig:ViewConfig;
			[Bindable]
			private var mapUrl:String;
			private function initApp():void
			{
				viewConfig = new ViewConfig(this);
				this.addEventListener(ReadURLEvent.READ_COMPLETE, readURLCompelte);
			} 
			
			//获取服务地址
			private function readURLCompelte(event:ReadURLEvent):void
			{
				//获取地图服务地址，默认 IP 为：localhost
				//用户若要更改服务地址，直接修改服务地址配置文件 mapUrlConfig.xml
				//或直接在此输入地图服务地址
				//格式如：restUrl = http://localhost:8090/iserver/services/map-world/rest/maps/World Map
				mapUrl = viewConfig.webUrl + ViewConfig.World_MAP1;
			}
	
			protected function submitHandler():void
			{
				if(this.isTheme == true)
					return;
				//定义标签专题图
				var themelabel:ThemeLabel = new ThemeLabel();	
				themelabel.text = new ThemeLabelText();
				themelabel.text.uniformStyle = new ServerTextStyle();
				themelabel.text.uniformStyle.align = TextAlignment.MIDDLECENTER;
				themelabel.text.uniformStyle.foreColor = new ServerColor(29, 169, 29);
				themelabel.text.uniformStyle.fontHeight = 4;
				themelabel.text.uniformStyle.fontName = "宋体";
				themelabel.text.uniformStyle.fontWeight = 10;  
				themelabel.labelEexpression = "Capital"; 
				themelabel.labelOverLengthMode = LabelOverLengthMode.NONE;
				
				//定义获取专题图时所需参数
				var themeParam:ThemeParameters = new ThemeParameters();
				themeParam.themes = [themelabel];				
				themeParam.dataSourceNames = ["World"];
				themeParam.datasetNames =["Countries"];
				
				//与服务端交互
				var themeservice:ThemeService = new ThemeService(this.mapUrl);
				themeservice.processAsync(themeParam,new AsyncResponder(this.displayTheme, excuteThemeErros, null));
			}
			
			//专题图服务失败时调用的处理函数
			private function excuteThemeErros(event:FaultEvent, mark:Object = null):void
			{
			}
		
			//专题图获取成功时调用的处理函数
			private function displayTheme(themeresult:ThemeResult, mark:Object = null):void
			{
				this.isTheme = true;
				var themeLayer:TiledDynamicRESTLayer = new TiledDynamicRESTLayer();
				themeLayer.customServiceParams.overlapDisplayed = false;
				themeLayer.enableServerCaching = false;
				themeLayer.url = this.mapUrl;
				themeLayer.layersID = themeresult.resourceInfo.newResourceID;
				themeLayer.transparent = true; 
				this.themeLayer = themeLayer;
				this.map.addLayer(themeLayer);
			}			
			
			//删除专题图
			private function deleteHandler():void
			{
				var themeRemove:RemoveThemeService = new RemoveThemeService(mapUrl);	
				var themeRemoveParam:RemoveThemeParameters = new RemoveThemeParameters();
				themeRemoveParam.id = this.themeLayer.layersID;				
				themeRemove.processAsync(themeRemoveParam,new AsyncResponder(this.delTheme, excuteThemeErros, null));
			}
			
			//专题图删除成功时调用的处理函数
			private function delTheme(themeResult:RemoveThemeResult,mark:Object = null):void
			{
				this.isTheme = false;
				if(themeResult.succeed = "true" && themeLayer)
				{
					this.map.removeLayer(themeLayer);
				}
			}
		]]>
	</fx:Script>
	
	<!--加载地图-->
	<s:Group width="100%" height="100%" >	
		<ic:Map id="map" x="0" y="0"  height="100%" width="100%" scales="{[1.25e-9, 2.5e-9, 5e-9, 1e-8, 2e-8, 4e-8, 8e-8, 1.6e-7, 3.205e-7, 6.4e-7]}">
			<ic:TiledDynamicRESTLayer url="{this.mapUrl}" enableServerCaching="false" />
		</ic:Map> 
	</s:Group>
	
	<!--操作窗口-->
	<s:Panel id="titlewin" title="标签专题图" fontFamily="宋体" fontSize="12" right="5" top="10" 
			 backgroundColor="#454343" backgroundAlpha="0.48" height="108">
		<s:VGroup top="5" gap="10" horizontalCenter="0" bottom="10">  
			<mx:Text text="对世界图层 Capital 字段制作标签专题图"/>
			<s:HGroup horizontalAlign="center" width="100%">
				<s:Button id="addButton" label="生成专题图" click="submitHandler()"/>
				<mx:Spacer width="10"/>
				<s:Button id="deleteButton" label="移除专题图" click="deleteHandler()" x="100"/>
			</s:HGroup>
		</s:VGroup>
	</s:Panel> 
</s:Application>

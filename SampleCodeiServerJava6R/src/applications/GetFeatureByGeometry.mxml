<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:ic="http://www.supermap.com/iclient/2010"
			   xmlns:is="http://www.supermap.com/iserverjava/2010" 
			   width="100%" height="100%"
			   creationComplete="initApp()">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.supermap.web.actions.DrawLine;
			import com.supermap.web.actions.DrawPoint;
			import com.supermap.web.actions.DrawPolygon;
			import com.supermap.web.actions.Pan;
			import com.supermap.web.core.Feature;
			import com.supermap.web.events.DrawEvent;
			import com.supermap.web.iServerJava6R.dataServices.GetFeaturesByGeometryParameters;
			import com.supermap.web.iServerJava6R.dataServices.GetFeaturesByGeometryService;
			import com.supermap.web.iServerJava6R.dataServices.GetFeaturesResult;
			import com.supermap.web.iServerJava6R.queryServices.SpatialQueryMode;
			
			import mx.controls.Alert;
			import mx.rpc.AsyncResponder;
			import mx.rpc.events.FaultEvent;
			
			import utilEvent.ReadURLEvent;
			
			private var viewConfig:ViewConfig;
			[Bindable]
			private var mapUrl:String;
			[Bindable]
			private var dataSetUrl:String;
			private function initApp():void
			{
				viewConfig = new ViewConfig(this);
				this.addEventListener(ReadURLEvent.READ_COMPLETE, readURLCompelte);
			} 
			
			//获取服务地址
			private function readURLCompelte(event:ReadURLEvent):void
			{
				//获取地图服务、数据集服务地址，默认 IP 为：localhost
				//用户若要更改服务地址，直接修改服务地址配置文件 mapUrlConfig.xml
				//或直接在此输入服务地址
				//格式如：restUrl = http://localhost:8090/iserver/services/map-world/rest/maps/World Map
				mapUrl = viewConfig.webUrl + ViewConfig.World_MAP;
				dataSetUrl = viewConfig.webUrl + ViewConfig.GetFeatures;
			}
			
			private function drawPoint(event:MouseEvent):void
			{
				var drawPointFea:DrawPoint = new DrawPoint(this.map);
				this.map.action = drawPointFea;
				drawPointFea.addEventListener(DrawEvent.DRAW_END, drawFeaEnd);
			}
			
			private function drawLine(event:MouseEvent):void
			{
				var drawLineFea:DrawLine = new DrawLine(this.map);
				this.map.action = drawLineFea;
				drawLineFea.addEventListener(DrawEvent.DRAW_END, drawFeaEnd);
			}
			
			protected function drawPolygon(event:MouseEvent):void
			{
				var drawPolygonFea:DrawPolygon = new DrawPolygon(this.map);
				this.map.action = drawPolygonFea;
				drawPolygonFea.addEventListener(DrawEvent.DRAW_END, drawFeaEnd);
			}
			
			private function drawFeaEnd(event:DrawEvent):void
			{
				var queryParams:Array = ["World:Countries"];
				var queryByGeometryParameters:GetFeaturesByGeometryParameters = new GetFeaturesByGeometryParameters();
				queryByGeometryParameters.datasetNames = queryParams;
				queryByGeometryParameters.geometry = event.feature.geometry;
				queryByGeometryParameters.spatialQueryMode = SpatialQueryMode.INTERSECT;
				queryByGeometryParameters.fromIndex = 0;
				queryByGeometryParameters.toIndex = -1;
				
				var geoSelService:GetFeaturesByGeometryService = new GetFeaturesByGeometryService(this.dataSetUrl);
				geoSelService.processAsync(queryByGeometryParameters, new AsyncResponder(this.dispalyQueryRecords, excuteErros) );
			}
			
			private function dispalyQueryRecords(result:GetFeaturesResult, mark:Object = null):void
			{
				var features:Array = result.features;		
				if(features.length == 0)
				{
					Alert.show("查询结果为空", "提示", 4, this);
					return; 
				}
				else
				{
					for each(var feature:Feature in result.features)
					{
						this.fl.addFeature(feature);
					}
				}
			}
			
			private function excuteErros(error:FaultEvent, mark:Object):void
			{
				Alert.show("查询失败","抱歉",4,this);
			}
			
			private function clearFeatures(event:MouseEvent):void
			{
				this.fl.clear();
			}
			
			private function panMap(event:MouseEvent):void
			{
				this.map.action = new Pan(this.map);
			}
		]]>
	</fx:Script>
	
	<!--添加地图-->
	<ic:Map id="map" x="0" y="0"  height="100%" width="100%">
		<ic:TiledDynamicRESTLayer url="{this.mapUrl}" />
		<ic:FeaturesLayer id="fl"/>
	</ic:Map> 
	
	<s:controlBarLayout>
		<s:BasicLayout/>
	</s:controlBarLayout>
	<s:controlBarContent>
		<s:HGroup height="100%" horizontalCenter="0">
			<s:Button skinClass="skins.drawPointBtn" click="drawPoint(event)"/>
			<s:Button skinClass="skins.drawLineBtn" click="drawLine(event)"/>
			<s:Button skinClass="skins.drawPolygonBtn" click="drawPolygon(event)"/>
			<s:Button skinClass="skins.clearBtnSkin" click="clearFeatures(event)"/>
			<s:Button skinClass="skins.panBtnSkin" click="panMap(event)"/>
		</s:HGroup>
	</s:controlBarContent>
</s:Application>

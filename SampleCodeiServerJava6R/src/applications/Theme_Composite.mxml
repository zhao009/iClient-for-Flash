<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:ic="http://www.supermap.com/iclient/2010"
			   xmlns:isj6="http://www.supermap.com/iserverjava/2010" 
			   width="100%" height="100%"
			   creationComplete="initApp()">
	<!--复合专题图-->
	
	<fx:Script>
		<![CDATA[
			import com.supermap.web.iServerJava6R.themeServices.*;
			import com.supermap.web.mapping.TiledDynamicRESTLayer;
			import com.supermap.web.utils.serverTypes.*;
			
			import mx.rpc.*;
			import mx.rpc.events.FaultEvent;
			
			import utilEvent.ReadURLEvent;
			
			private var isTheme:Boolean = false;//判定是否已制作了专题图
			private var layerid:String;	
			private var themeLayer:TiledDynamicRESTLayer;	
			private var viewConfig:ViewConfig;
			[Bindable]
			private var mapUrl:String;
			private function initApp():void
			{
				viewConfig = new ViewConfig(this);
				this.addEventListener(ReadURLEvent.READ_COMPLETE, readURLCompelte);
			} 
			
			//获取服务地址
			private function readURLCompelte(event:ReadURLEvent):void
			{
				//获取地图服务地址，默认 IP 为：localhost
				//用户若要更改服务地址，直接修改服务地址配置文件 mapUrlConfig.xml
				//或直接在此输入地图服务地址
				//格式如：restUrl = http://localhost:8090/iserver/services/map-world/rest/maps/World Map
				mapUrl = viewConfig.webUrl + ViewConfig.World_MAP;
			}
			
			//定义单值专题图子项
			private function setItems():Array
			{
				var items:Array = new Array(); 
				var item:ThemeUniqueItem;
				
				//子项1
				item = new ThemeUniqueItem();
				item.unique = "1";
				item.style = new ServerStyle();
				item.style.fillForeColor = new ServerColor(1, 128, 171);//204, 227, 232);
				item.style.lineWidth = 0.1;
				item.visible = true; 
				items.push(item);
				
				//子项2
				item = new ThemeUniqueItem();
				item.unique = "247";
				item.style = new ServerStyle();
				item.style.fillForeColor = new ServerColor(192, 214, 54);//208, 110, 103);
				item.style.lineWidth = 0.1;
				item.visible = true; 
				items.push(item);
				return items;
			}
 
			protected function submitHandler():void
			{
				//当已制作专题图
				if(this.isTheme == true)
					return;
				//定义单值专题图
				var themeUnique:ThemeUnique = new ThemeUnique();
				themeUnique.items = this.setItems();
				themeUnique.uniqueExpression = "SmID";
				themeUnique.defaultStyle = new ServerStyle();
				themeUnique.defaultStyle.fillOpaqueRate = 100;
				themeUnique.defaultStyle.fillForeColor = new ServerColor(250, 237, 195);
				themeUnique.defaultStyle.lineWidth = 0.1;
				
				//定义点密度专题图
				var themeDotDensity:ThemeDotDensity = new ThemeDotDensity();	
				themeDotDensity.dotExpression = "Pop_1994";
				themeDotDensity.value = 10000000;
				themeDotDensity.style = new ServerStyle();
				themeDotDensity.style.markerSize = 2;
				themeDotDensity.style.markerSymbolID = 1;
				themeDotDensity.style.fillForeColor = new ServerColor(0, 180, 150);
				
				//定义获取专题图所需参数
				var themeParam:ThemeParameters = new ThemeParameters();
				themeParam.themes = [themeDotDensity, themeUnique];				
				themeParam.dataSourceNames = ["World"];
				themeParam.datasetNames =["Countries"];  
				
				//获取专题图
				var themeservice:ThemeService = new ThemeService(this.mapUrl);				
				themeservice.processAsync(themeParam,new AsyncResponder(this.displayTheme, excuteThemeErros, null)); 
			}
			
			//专题图服务失败时调用的处理函数
			private function excuteThemeErros(event:FaultEvent, mark:Object = null):void
			{
			}
			
			//专题图获取成功时调用的处理函数
			private function displayTheme(themeresult:ThemeResult, mark:Object = null):void
			{
				this.isTheme = true;
				themeLayer = new TiledDynamicRESTLayer();		
				themeLayer.enableServerCaching = false;
				themeLayer.url = this.mapUrl;
				themeLayer.layersID = themeresult.resourceInfo.newResourceID;
				layerid = themeresult.resourceInfo.newResourceID;
				themeLayer.transparent = true;						
				this.map.addLayer(themeLayer);
			}	 
			
			//删除专题图
			private function deleteHandler():void
			{
				var themeRemove:RemoveThemeService = new RemoveThemeService(this.mapUrl); 
				var themeRemoveParam:RemoveThemeParameters = new RemoveThemeParameters();
				themeRemoveParam.id = layerid; 
				themeRemove.processAsync(themeRemoveParam,new AsyncResponder(this.delTheme, excuteThemeErros, null));
			}
		 
			//专题图删除成功时调用的处理函数
			private function delTheme(themeResult:RemoveThemeResult,mark:Object = null):void
			{
				this.isTheme = false;
				if(themeResult.succeed = "true" && themeLayer)
				{
					this.map.removeLayer(themeLayer);
				}
			} 
		]]>
	</fx:Script>
	
	<!--加载地图-->
	<s:Group width="100%" height="100%" >	
		<ic:Map id="map" x="0" y="0"  height="100%" width="100%" scales="{[1.25e-9, 2.5e-9, 5e-9, 1e-8, 2e-8, 4e-8, 8e-8, 1.6e-7, 3.205e-7, 6.4e-7]}">
			<ic:TiledDynamicRESTLayer url="{this.mapUrl}"/>
		</ic:Map> 
	</s:Group>
	
	<!--操作窗口-->
	<s:Panel id="titlewin" title="复合专题图" fontFamily="宋体" fontSize="12" right="5" top="10" backgroundColor="#454343" backgroundAlpha="0.48" height="108">
		<s:VGroup top="5" gap="10" horizontalCenter="0" bottom="22">  
			<mx:Text text="点密度专题图 + 单值专题图"/>
			<s:HGroup horizontalAlign="center" width="100%">
				<s:Button id="addButton" label="生成专题图" click="submitHandler()" width="80" color="0"/> 
				<mx:Spacer width="10"/>
				<s:Button id="deleteButton" label="移除专题图" click="deleteHandler()" width="80" color="0"/> 
			</s:HGroup>
		</s:VGroup>
	</s:Panel>
</s:Application>

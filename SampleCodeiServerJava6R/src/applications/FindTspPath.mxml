<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"  
			   xmlns:ic="http://www.supermap.com/iclient/2010"
			   xmlns:is="http://www.supermap.com/iserverjava/2010"
			   width="100%" height="100%"
			   creationComplete="initApp()">
	<!--旅行商分析-->
	<fx:Script>
		<![CDATA[
			import com.supermap.web.actions.DrawPoint;
			import com.supermap.web.actions.Pan;
			import com.supermap.web.core.Feature;
			import com.supermap.web.core.Point2D;
			import com.supermap.web.core.geometry.GeoPoint;
			import com.supermap.web.core.styles.PictureMarkerStyle;
			import com.supermap.web.core.styles.PredefinedLineStyle;
			import com.supermap.web.events.DrawEvent;
			import com.supermap.web.iServerJava6R.networkAnalystServices.FindTSPPathsParameters;
			import com.supermap.web.iServerJava6R.networkAnalystServices.FindTSPPathsResult;
			import com.supermap.web.iServerJava6R.networkAnalystServices.FindTSPPathsService;
			import com.supermap.web.iServerJava6R.networkAnalystServices.Path;
			import com.supermap.web.iServerJava6R.networkAnalystServices.TransportationAnalystParameter;
			import com.supermap.web.iServerJava6R.networkAnalystServices.TransportationAnalystResultSetting;
			import com.supermap.web.mapping.FeaturesLayer;
			
			import mx.controls.Alert;
			import mx.rpc.AsyncResponder;
			
			import utilEvent.ReadURLEvent;
			
			
			private var viewConfig:ViewConfig;
			[Bindable]
			private var restUrl:String;
			private var netWorkAnalystUrl:String;
			public var pathNodes:Array = [];
			private var pointIndex:int;//分析点顺序标识
			
			//初始化
			private function initApp():void
			{
				viewConfig = new ViewConfig(this);
				this.addEventListener(ReadURLEvent.READ_COMPLETE, readURLCompelte);
			} 
			
			//获取服务地址
			private function readURLCompelte(event:ReadURLEvent):void
			{
				pointIndex = 1;
				pathNodes = [];
				//获取地图服务、网络分析服务地址，默认 IP 为：localhost
				//用户若要更改服务地址，直接修改服务地址配置文件 mapUrlConfig.xml
				//或直接在此输入服务地址
				//格式如：restUrl = http://localhost:8090/iserver/services/map-world/rest/maps/World Map
				restUrl = viewConfig.webUrl + ViewConfig.ChangChun_MAP;
				netWorkAnalystUrl = viewConfig.webUrl + ViewConfig.NetWorkAnalyst_Layer;
			}
			
			//绘制路径结点
			private function drawPathNodes(event:Event):void
			{  		
				var drawPoint:DrawPoint = new DrawPoint(map);			
				var markerStyle:PictureMarkerStyle = new PictureMarkerStyle("../assets/selectNode.png");
				markerStyle.yOffset = 23;
				markerStyle.xOffset = 1;  
				drawPoint.style = markerStyle;
				this.map.action = drawPoint; 
				drawPoint.addEventListener(DrawEvent.DRAW_END, drawEndHandler);	  
			}
			
			//路径结点绘制完成事件 DrawEvent.DRAW_END 的侦听函数
			private function drawEndHandler(event:DrawEvent):void
			{
				if(event.feature.geometry is GeoPoint)
				{
					var geoPoint:GeoPoint = event.feature.geometry as GeoPoint;
					var point:Point2D = new Point2D(geoPoint.x, geoPoint.y);
					pathNodes.push(point);
				}
				
				event.feature.toolTip = pointIndex.toString();
				fl.addFeature(event.feature);
				pointIndex++;
			}
			
			//旅行商分析
			private function excuteFindPathService():void 
			{  		
				if(this.pathNodes.length < 2)
				{
					Alert.show("请输入至少两个分析点！","抱歉",4,this);
					return;
				}
				map.action = new Pan(map);
				pointIndex = 1;
				
				//定义交通网络分析结果参数，这些参数用于指定返回的结果内容
				var resultSetting:TransportationAnalystResultSetting = new TransportationAnalystResultSetting();
				resultSetting.returnEdgeFeatures = true;
				resultSetting.returnEdgeGeometry = true;
				resultSetting.returnRoutes = true;
				
				//定义交通网络分析通用参数
				var pathParameter:TransportationAnalystParameter = new TransportationAnalystParameter(); 
				pathParameter.resultSetting = resultSetting;
				pathParameter.turnWeightField = "TurnCost";
				pathParameter.weightFieldName = "length";
				
				//定义服务区分析参数
				var findTSPPathsParameters:FindTSPPathsParameters = new FindTSPPathsParameters();
				findTSPPathsParameters.nodes = this.pathNodes;
				findTSPPathsParameters.parameter = pathParameter;
				
				//执行旅行商分析服务
				var findTSPPathsService:FindTSPPathsService = new FindTSPPathsService(this.netWorkAnalystUrl);
				findTSPPathsService.processAsync(findTSPPathsParameters, new AsyncResponder(this.displayNetworkAnalystResult, excuteErros, null));
			}
			
			//旅行商分析失败时调用的处理函数
			public function excuteErros(object:Object, mark:Object = null):void
			{
				Alert.show("与服务端交互失败", "抱歉", 4, this);
			}
			
			//旅行商分析成功时调用的处理函数
			private function displayNetworkAnalystResult(findPathResult:FindTSPPathsResult, mark:Object = null):void
			{
				if(findPathResult.tspPathList == null)
				{
					Alert.show("查询结果为空", "抱歉", 4, this);
					return;
				}
				
				var pathList:Array = findPathResult.tspPathList;
				if(pathList && pathList.length > 0)
				{
					var style:PredefinedLineStyle = new PredefinedLineStyle(PredefinedLineStyle.SYMBOL_SOLID, 0x3f7dee, 0.7, 5); 
					var pathListLength:int = pathList.length;
					for(var i:int = 0; i < pathListLength; i++)
					{
						var feature:Feature = new Feature();
						feature.geometry = (pathList[i] as Path).route;
						feature.style = style;
						this.fl.addFeature(feature);
					}
				}
				this.pathNodes = [];//清空路径结点
			}
			
			//清除要素图层
			private function removeFeature(event:MouseEvent):void
			{
				this.fl.clear();
				this.pathNodes = [];
			}
			
			//平移地图
			private function panMap(event:MouseEvent):void
			{
				this.map.action = new Pan(map);
			}
		]]>
	</fx:Script>
	
	<!--加载地图-->
	<ic:Map id="map" x="0" y="0"  height="100%" width="100%">
		<ic:TiledDynamicRESTLayer  url="{this.restUrl}"/>
		<ic:FeaturesLayer id="fl"/>
	</ic:Map>
	
	<!--参数设置窗口-->
	<s:Panel id="titlewin" title="旅行商分析" fontSize="15" fontFamily="宋体" right="5" height="74" 
			 backgroundAlpha="0.5" backgroundColor="#454343">
		<s:VGroup top="10" gap="10" horizontalCenter="0" bottom="5" right="5" left="5">
			<s:HGroup horizontalAlign="center" gap="10" width="240">
				<s:Button label="选择分析点"
						  fontFamily="宋体"
						   id="choosePathPoint"
						   click="drawPathNodes(event)"
						   width="99"
						   styleName="AboutVersion"
						   color="0"/>
				
				<s:Button label="旅行商分析"
						  fontFamily="宋体"
						   id="submitTSPPathAnalyst"
						   click="excuteFindPathService()"
						   width="99"
						   styleName="AboutVersion"
						   color="0"/>
			</s:HGroup>
		</s:VGroup>
	</s:Panel>
	
	<s:controlBarLayout>
		<s:BasicLayout/>
	</s:controlBarLayout>
	<s:controlBarContent>
		<s:Label left="5" text="  请首先选择分析点（至少两个），然后再点击“旅行商分析" textAlign="left" fontSize="15" height="40" 
				 width="274" verticalAlign="middle" fontWeight="bold" fontFamily="宋体"/>
		<s:HGroup horizontalAlign="center" gap="10" width="100%">
			<s:Button skinClass="skins.clearBtnSkin"
					  id="AreaAnalyst"
					  click="removeFeature(event)"/>
			<s:Button skinClass="skins.panBtnSkin"
					  click="panMap(event)"/>
		</s:HGroup>
	</s:controlBarContent>
</s:Application>

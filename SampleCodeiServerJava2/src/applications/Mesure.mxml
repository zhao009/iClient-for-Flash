<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:ic="http://www.supermap.com/iclient/2010"
		 xmlns:is="http://www.supermap.com/iserverjava/2008"
		 creationComplete="initApp()"
		 width="100%" height="100%"
		 >
	
	<fx:Script>
		<![CDATA[
			[Bindable]
			private var viewConfig:ViewConfig;
			private function initApp():void
			{
				viewConfig = new ViewConfig(this);
			} 
		]]>
	</fx:Script>
	
	<fx:Script>
		<![CDATA[
			import com.supermap.web.actions.Pan;
			import com.supermap.web.actions.DrawLine;
			import com.supermap.web.actions.DrawPolygon;
			import com.supermap.web.core.Feature;
			import com.supermap.web.core.geometry.GeoLine;
			import com.supermap.web.core.geometry.GeoRegion;
			import com.supermap.web.core.styles.PredefinedFillStyle;
			import com.supermap.web.core.styles.PredefinedLineStyle;
			import com.supermap.web.events.DrawEvent;
			import com.supermap.web.iServerJava2.measureServices.*;
			
			import mx.controls.Alert;
			import mx.rpc.AsyncResponder;
			
			import spark.components.supportClasses.Skin;
			
			//绘制线操作
			private function measureByLine(event:MouseEvent):void
			{
				measureResultOutput.text = "量算结果：";
				fl.clear();
				var drawline:DrawLine = new DrawLine(this.map);
				this.map.action = drawline;
				//为绘图操作 drawline 定义 DrawEvent.DRAW_END 事件的侦听器
				drawline.addEventListener(DrawEvent.DRAW_END, onDrawGeometry);
			}
			
			//绘制面操作
			private function measureByPolygon(event:MouseEvent):void
			{
				measureResultOutput.text = "量算结果：";
				fl.clear();
				var drawPolygon:DrawPolygon = new DrawPolygon(this.map);
				this.map.action = drawPolygon;
				//为绘图操作 drawPolygon 定义 DrawEvent.DRAW_END 事件的侦听器
				drawPolygon.addEventListener(DrawEvent.DRAW_END, onDrawGeometry);
			}
			
			//显示查询结果
			private function displayMeasureRecords(measureResult:MeasureResult, mark:Object = null):void
			{
				var info:String;
				var temp:Number
				if (mark == "distance")
				{
					temp = Number(measureResult.distance);
					temp /= 1000;
					info = temp.toFixed(2);
					info += " 千米";
				}
				else
				{
					temp = Number(measureResult.area);
					temp /= 1000 * 1000;
					info = temp.toFixed(2);
					info += " 平方千米";
				}
				
				measureResultOutput.text = "量算结果：" + info;
			}
			
			//响应绘图操作的侦听事件 DrawEvent.DRAW_END
			private function onDrawGeometry(event:DrawEvent):void
			{
				var feature:Feature = event.feature;
				fl.addFeature(feature);
				var meatureType:String = "distance";
				var measureService:MeasureService = new MeasureService(viewConfig.webUrl);
				
				var measureParam:MeasureParameters = new MeasureParameters("World");
				measureParam.geometry = feature.geometry;
				if(feature.geometry is GeoRegion)
					meatureType = "area";
				measureService.execute(new AsyncResponder(this.displayMeasureRecords, null, meatureType), measureParam);
			}
			
			private function clearFeature(event:MouseEvent):void
			{
				this.fl.clear();
				measureResultOutput.text = "量算结果：";
			}
			private function panMap(event:MouseEvent):void
			{
				this.map.action = new Pan(this.map);
			}
		]]>
	</fx:Script>
	
	<!--分块动态 IServer 图层-->
	<ic:Map id="map" scales="{[1.25e-9, 2.5e-9, 5e-9, 1e-8, 2e-8, 4e-8, 8e-8, 1.6e-7, 3.205e-7, 6.4e-7]}">
		<is:TiledDynamicIServerLayer url="{viewConfig.webUrl}" 
									 mapName="World" 
									 mapServiceAddress="{viewConfig.gisUrl}" 
									 mapServicePort="8600"/>
		<ic:FeaturesLayer id="fl" />
	</ic:Map> 
	
	<!--量算控制按钮-->
	<s:HGroup gap="10" horizontalCenter="0" top="10">	
		<s:Button skinClass="skins.distanceBtnSkin" toolTip="距离量算" id="drawLine" click="measureByLine(event)"/>
		<s:Button skinClass="skins.areaBtnSkin" toolTip="面积量算" id="drawPolygon" click="measureByPolygon(event)"/> 
		<s:Button skinClass="skins.clearBtnSkin" toolTip="清除" click="clearFeature(event)"/>
		<s:Button skinClass="skins.panBtnSkin" toolTip="平移" click="panMap(event)"/>
	</s:HGroup>
	<s:HGroup horizontalCenter="0" bottom="20">
		<s:Label  text="量算结果：" paddingRight="10" id="measureResultOutput"/>
	</s:HGroup>
</s:Application>


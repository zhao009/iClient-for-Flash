<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:ic="http://www.supermap.com/iclient/2010"
			   xmlns:is="http://www.supermap.com/iserverjava/2008"
			   width="100%" height="100%"
			   creationComplete="initApp()">
	<fx:Script>
		<![CDATA[
			[Bindable]
			private var viewConfig:ViewConfig;
			private function initApp():void
			{
				viewConfig = new ViewConfig(this);
			} 
		]]>
	</fx:Script>
	
	<fx:Script>
		<![CDATA[
			import com.supermap.web.actions.Pan;
			import com.supermap.web.components.FeatureDataGrid;
			import com.supermap.web.core.Feature;
			import com.supermap.web.events.FeatureDataGridEvent;
			import com.supermap.web.iServerJava2.ServerFeatureType;
			import com.supermap.web.iServerJava2.queryServices.QueryBySqlParameters;
			import com.supermap.web.iServerJava2.queryServices.QueryBySqlService;
			import com.supermap.web.iServerJava2.queryServices.QueryLayerParam;
			import com.supermap.web.iServerJava2.queryServices.QueryParam;
			import com.supermap.web.iServerJava2.queryServices.RecordSet;
			import com.supermap.web.iServerJava2.queryServices.ResultSet;
			import com.supermap.web.iServerJava2.queryServices.ReturnResultSetInfo;
			import com.supermap.web.iServerJava2.queryServices.SqlParam;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.rpc.AsyncResponder;
			
			//当前查询图层
			private var currentQueryLayer:String = "World@world";
			//查询图层列表
			[Bindable]
			private var queryLayers:Array = ["World@world","Capital@world"]; 
			
			private var resultFeatures:Array = [];
			private var recordGrid:FeatureDataGrid;
			
			//查询按钮点击事件 
			private function onExcuteQueryClick(event:MouseEvent):void 
			{
				//featuresLayer.clear(); 
				
				var sqlParam:SqlParam = new SqlParam();
				sqlParam.whereClause = txtSqlExpress.text;
				
				var queryLayerParam:QueryLayerParam = new QueryLayerParam(currentQueryLayer, sqlParam);
				
				var queryParam:QueryParam = new QueryParam();
				queryParam.expectCount = (Number)(txtReturnCount.text);
				queryParam.networkType = ServerFeatureType.LINE;
				queryParam.returnResultSetInfo = ReturnResultSetInfo.RETURN_RESULT_ATTRIBUTEANDGEOMETRY;
				queryParam.queryLayerParams = [queryLayerParam];
				
				var queryBySqlParameters:QueryBySqlParameters = new QueryBySqlParameters("World", queryParam);
				
				var sqlQuery:QueryBySqlService = new QueryBySqlService(viewConfig.webUrl);
				sqlQuery.execute(new AsyncResponder(this.dispalyQueryRecords,
					function (object:Object, mark:Object = null):void
					{
						Alert.show("查询失败。");
					}, null),queryBySqlParameters);
			}
			
			//显示查询结果
			private function dispalyQueryRecords(resultSet:ResultSet, mark:Object = null):void
			{
				if(!bQueryResultSaved.selected)
				{
					resultFeatures = [];
					if(this.recordGrid)
					{
						this.recordGrid.clear();
						this.featuresLayer.clear();
					}
					
				}
				var features:Array = (resultSet.recordSets[0] as RecordSet).toFeatureSet(); 
				if(!resultSet || !resultSet.recordSets || !features || features.length == 0)
				{
					Alert.show("查询结果为空", "提示", 4, this);
					return;
				}
				//剔除重复元素
				outerLoop:
				for each (var feature:Feature in features)
				{
					for each(var value:Feature in resultFeatures)
					{
						if(value.attributes.SMID == feature.attributes.SMID)
						{
							break outerLoop;
						}
					}
					resultFeatures.push(feature);
				}
				if(!this.recordGrid)
				{
					this.recordGrid = new FeatureDataGrid(this.featuresLayer, resultFeatures, this.resultWin); 
				}
				else
					this.recordGrid.features = resultFeatures;
				this.recordGrid.addEventListener(MouseEvent.MOUSE_DOWN, this.recordGridMouseDown);
				this.recordGrid.addEventListener(FeatureDataGridEvent.FEATURE_SELECTED, featureSelectedHandler);
				this.resultWin.removeAllChildren();
				this.resultWin.addElement(recordGrid); 
				resultWin.visible = true; 
			}
			
			private function featureSelectedHandler(event:FeatureDataGridEvent):void
			{
				this.map.panTo(event.feature.geometry.bounds.center);
			}
			//查询图层改变事件
			private function onQueryLayerChange(event:ListEvent):void 
			{
				featuresLayer.clear(); 	
				var queryLayer:String = ComboBox(event.target).selectedItem.toString();
				currentQueryLayer = queryLayer;
			}
			
			//查询参数设置窗口关闭事件
			private function titleWinClose(event:CloseEvent):void 
			{ 
				this.resultWin.visible = false;
			}
			 
			private function clearFeature(event:MouseEvent):void
			{
				map.action = new Pan(map);
				resultFeatures = [];
				if(this.recordGrid)
				{
					this.recordGrid.clear();
				}
				featuresLayer.clear(); 
				this.titleWinClose(event as CloseEvent);
			}
			
			private function pan(event:MouseEvent):void
			{
				map.action = new Pan(map);;
			}
			
			private function resultWin_mouseUp(event:MouseEvent):void
			{
				resultWin.stopDrag();
			}
			
			private function resultWin_mouseDown(event:MouseEvent):void
			{
				resultWin.startDrag();
			}
			
			private function recordGridMouseDown(event:MouseEvent):void
			{
				event.stopPropagation();
				resultWin.stopDrag();
			}
		]]>
	</fx:Script>
	
	<!--添加地图-->
	<!--地图地址(url)、名称(mapName)、比例尺(scales)用户可更改-->
	<!--例如：url="您的地图所在服务器地址"，mapName="您的地图名称"，scales="您的地图比例尺"-->
	<ic:Map id="map" scales="{[1.25e-9, 2.5e-9, 5e-9, 1e-8, 2e-8, 4e-8, 8e-8, 1.6e-7, 3.205e-7, 6.4e-7]}">
		<is:TiledDynamicIServerLayer url="{viewConfig.webUrl}"
										  mapName="World"
										  mapServiceAddress="{viewConfig.gisUrl}"
										  mapServicePort="8600"/>
		<ic:FeaturesLayer id="featuresLayer" />		 
	</ic:Map>
	
	<!--查询结果显示窗口-->
	<mx:TitleWindow id="resultWin" title="查询结果：" mouseDown="resultWin_mouseDown(event)" close="titleWinClose(event)" layout="absolute" showCloseButton="true" 
					bottom="10" horizontalCenter="10" backgroundColor="#737171" backgroundAlpha="0.60" visible="false" mouseUp="resultWin_mouseUp(event)">
	</mx:TitleWindow>
	
	<!--查询参数设置窗口-->
	<s:Panel id="titlewin" title="SQL查询" fontSize="12" fontFamily="宋体" right="5" top="10" backgroundColor="#454343" backgroundAlpha="0.48">
		<s:Label x="10" y="10" text="查询图层："/>
		<mx:ComboBox x="97" y="7" dataProvider="{queryLayers}" change="onQueryLayerChange(event)" width="160"/>
		<s:Label id="sqlLanguage" x="10" y="44" text="sql语句："/>
		<s:TextInput id="txtSqlExpress" text="smid = 247" x="97" y="42" width="160"/>
		<s:Label x="12" y="76" text="返回记录数："/>
		<s:TextInput x="97" y="74" id="txtReturnCount" text="-1"/>
		<s:CheckBox  x="10" y="106" id="bQueryResultSaved" label="保留查询结果" selected="false" />
		<s:Button x="14" y="138" label="查询" id="excuteQuery" click="onExcuteQueryClick(event)"/>
		<s:Button x="186" y="138" label="清除" id="clear" click="clearFeature(event)"/>
		<s:Button x="100" y="138" label="平移" id="panMap" click="pan(event)"/>
	</s:Panel>
</s:Application>

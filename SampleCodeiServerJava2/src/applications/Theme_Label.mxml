<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   width="100%" height="100%"
			   xmlns:ic="http://www.supermap.com/iclient/2010" 
			   xmlns:is="http://www.supermap.com/iserverjava/2008"
			   creationComplete="initApp()">
	
	<fx:Script>
		<![CDATA[
			[Bindable]
			private var viewConfig:ViewConfig;
			
			private function initApp():void
			{
				viewConfig = new ViewConfig(this);
			} 
		]]>
	</fx:Script>
	
	<fx:Script>
		<![CDATA[
			import com.supermap.web.core.Rectangle2D;
			import com.supermap.web.iServerJava2.themeServices.LabelBackShape;
			import com.supermap.web.iServerJava2.themeServices.RemoveThemesParameters;
			import com.supermap.web.iServerJava2.themeServices.RemoveThemesResult;
			import com.supermap.web.iServerJava2.themeServices.RemoveThemesService;
			import com.supermap.web.iServerJava2.themeServices.ServerColor;
			import com.supermap.web.iServerJava2.themeServices.ServerStyle;
			import com.supermap.web.iServerJava2.themeServices.ServerTextStyle;
			import com.supermap.web.iServerJava2.themeServices.ThemeLabel;
			import com.supermap.web.iServerJava2.themeServices.ThemeParameters;
			import com.supermap.web.iServerJava2.themeServices.ThemeResult;
			import com.supermap.web.iServerJava2.themeServices.ThemeService;
			import com.supermap.web.mapping.Layer;
			import com.supermap.web.mapping.TiledDynamicIServerLayer;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.rpc.AsyncResponder;
			
			private var _themeList:Array = new Array();			
			
			private function onSubmitLabelTheme():void
			{				
				var theme:ThemeLabel = new ThemeLabel();				
				theme.labelExpression = "country";			
				theme.isOverlapAvoided = false;
				
				var txtStyle:ServerTextStyle = new ServerTextStyle();
				txtStyle.color = new ServerColor(0,0,0);
				txtStyle.fontHeight = 3;
				txtStyle.fontWidth = 1;
				txtStyle.transparent = true;
				theme.uniformStyle = txtStyle;
				
				theme.labelBackShape = LabelBackShape.ROUND_RECT;		
				
				var backStyle:ServerStyle = new ServerStyle();
				backStyle.fillForeColor = new ServerColor(243, 205, 250);
				theme.backStyle = backStyle;
			
				var themeParam:ThemeParameters = new ThemeParameters("World");
				themeParam.layerName = "World@World";
				themeParam.theme = theme;				
				
				var themeService:ThemeService = new ThemeService(this.viewConfig.webUrl);
				themeService.execute(new AsyncResponder(this.displayTheme, excuteThemeErros, null), themeParam);
			}
			
			private function excuteThemeErros(object:Object, mark:Object = null):void
			{
				Alert.show("专题图操作失败","抱歉",4,this);
			}			
		
			private function displayTheme(theme:ThemeResult, mark:Object = null):void
			{
				var themeLayer:TiledDynamicIServerLayer = new TiledDynamicIServerLayer();
				themeLayer.layersKey = theme.key;
				themeLayer.name = theme.name;
				themeLayer.url = this.viewConfig.webUrl;
				themeLayer.mapName = "World";
				
				themeLayer.mapServicePort = "8600";
				themeLayer.mapServiceAddress="http://" + viewConfig.gisUrl;
				
				this._themeList.unshift(theme.name);				
				this.map.addLayer(themeLayer);
			}
			
			private function onChangeTheme(event:Event):void
			{
				var currentTheme:String = event.target.selectedItem.toString();
				var layers:ArrayCollection = map.layers as ArrayCollection;
				var layer:TiledDynamicIServerLayer;
				for (var index:int = 0; index < layers.length; index++)
				{
					if (layers[index] is TiledDynamicIServerLayer)
					{
						layer = layers[index];
						if(layer.name == currentTheme)
						{
							this.map.removeLayer(layer);
							break;
						}
					}
				}
				this.map.addLayer(layer);
			}			
			
			private function onRemoveLabelTheme():void
			{
				var labelThemeStr:String = this._themeList[0];				
				
				if(labelThemeStr)
				{
					this.commonRemoveTheme(labelThemeStr);
					commonServerRemoveTheme(labelThemeStr);
				}
			}			
			
			private function commonRemoveTheme(themeStr:String):void
			{
				var layers:ArrayCollection = map.layers as ArrayCollection;
				var layer:Layer;
				for (var index:int = 0; index < layers.length; index++)
				{
					layer = layers.getItemAt(index) as Layer;
					if (layer is TiledDynamicIServerLayer)
					{						
						layer = layer as TiledDynamicIServerLayer;
						if(layer.name == themeStr)
							this.map.removeLayer(layer);
					}
				}
			}			
			
			private function commonServerRemoveTheme(themeStr:String):void
			{
				var removeThemeParam:RemoveThemesParameters = new RemoveThemesParameters("World");
				removeThemeParam.layerNames = [themeStr];
				
				var removeThemeService:RemoveThemesService = new RemoveThemesService(this.viewConfig.webUrl);
				
				removeThemeService.execute(new AsyncResponder(this.removeThemeSuccess, excuteThemeErros, null), removeThemeParam);
			}
			
			private function removeThemeSuccess(removeResult:RemoveThemesResult,  mark:Object = null):void
			{
				return;
			}
			
			private function submitHandler():void
			{
				onSubmitLabelTheme();
			}
			
			private function deleteHandler():void
			{
				onRemoveLabelTheme();
			}
			
		]]>
	</fx:Script>
	
	<!--添加地图-->
	<s:Panel fontFamily="宋体" width="100%" height="100%" fontSize="18" title="请在完成此功能的演示后删除专题图，否则服务端会缓存此专题图，将影响下一专题图功能的演示">
		<ic:Map id="map" scales="{[1.25e-9, 2.5e-9, 5e-9, 1e-8, 2e-8, 4e-8, 8e-8, 1.6e-7, 3.205e-7, 6.4e-7]}">
			<is:TiledDynamicIServerLayer url="{viewConfig.webUrl}"
										   mapName="World"
										   mapServiceAddress="{viewConfig.gisUrl}"
										   mapServicePort="8600"/>
		</ic:Map> 
	</s:Panel>
	<s:Panel id="titlewin" title="标签专题图" fontSize="12" right="5" top="10" backgroundColor="#454343" backgroundAlpha="0.48" height="108">
		<s:VGroup top="5" gap="10" horizontalCenter="0" bottom="10">  
			<mx:Text text="对世界区划图层 Country字段制作标签专题图"/>
			<s:HGroup horizontalAlign="center" width="100%">
				<s:Button id="addButton" label="生成专题图" click="submitHandler()"/>
				<mx:Spacer width="10"/>
				<s:Button id="deleteButton" label="移除专题图" click="deleteHandler()" x="100"/>
			</s:HGroup>
		</s:VGroup>
	</s:Panel> 
</s:Application>
